Metadata-Version: 2.1
Name: fds.sdk.FactSetBenchmarks
Version: 1.1.1
Summary: FactSet Benchmarks client library for Python
Home-page: https://github.com/FactSet/enterprise-sdk/tree/main/code/python/FactSetBenchmarks/v1
Author: FactSet Research Systems
License: Apache License, Version 2.0
Keywords: FactSet,API,SDK
Platform: UNKNOWN
Requires-Python: >=3.7
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: urllib3 (>=1.25.3)
Requires-Dist: python-dateutil
Requires-Dist: fds.sdk.utils (>=1.0.0)

[![FactSet](https://raw.githubusercontent.com/factset/enterprise-sdk/main/docs/images/factset-logo.svg)](https://www.factset.com)

# FactSet Benchmarks client library for Python

[![PyPi](https://img.shields.io/pypi/v/fds.sdk.FactSetBenchmarks)](https://pypi.org/project/fds.sdk.FactSetBenchmarks/)
[![Apache-2 license](https://img.shields.io/badge/license-Apache2-brightgreen.svg)](https://www.apache.org/licenses/LICENSE-2.0)

FactSet Benchmarks API gives access to Index Constituents, Prices, Returns, and Ratios. For a sample list of identifiers, use the /metrics endpoint. Equity Only - Fixed Income Benchmark support coming soon.


This Python package is automatically generated by the [OpenAPI Generator](https://openapi-generator.tech) project:

- API version: 1.7.0
- Package version: 1.1.1
- Build package: org.openapitools.codegen.languages.PythonClientCodegen

## Requirements

* Python >= 3.7

## Installation

### Poetry

```shell
poetry add fds.sdk.utils fds.sdk.FactSetBenchmarks
```

### pip

```shell
pip install fds.sdk.utils fds.sdk.FactSetBenchmarks
```

## Usage

1. [Generate authentication credentials](../../../../README.md#authentication).
2. Setup Python environment.
   1. Install and activate python 3.7+. If you're using [pyenv](https://github.com/pyenv/pyenv):

      ```sh
      pyenv install 3.9.7
      pyenv shell 3.9.7
      ```

   2. (optional) [Install poetry](https://python-poetry.org/docs/#installation).
3. [Install dependencies](#installation).
4. Run the following:

```python
from fds.sdk.utils.authentication import ConfidentialClient

import fds.sdk.FactSetBenchmarks
from fds.sdk.FactSetBenchmarks.api import benchmark_constituents_api
from fds.sdk.FactSetBenchmarks.models import *
from dateutil.parser import parse as dateutil_parser
from pprint import pprint

# See configuration.py for a list of all supported configuration parameters.

# Examples for each supported authentication method are below,
# choose one that satisfies your use case.

# (Preferred) OAuth 2.0: FactSetOAuth2
# See https://github.com/FactSet/enterprise-sdk#oauth-20
# for information on how to create the app-config.json file
# See https://github.com/FactSet/enterprise-sdk-utils-python#authentication
# for more information on using the ConfidentialClient class
configuration = fds.sdk.FactSetBenchmarks.Configuration(
    fds_oauth_client=ConfidentialClient('/path/to/app-config.json')
)

# Basic authentication: FactSetApiKey
# See https://github.com/FactSet/enterprise-sdk#api-key
# for information how to create an API key
# configuration = fds.sdk.FactSetBenchmarks.Configuration(
#     username='USERNAME-SERIAL',
#     password='API-KEY'
# )

# Enter a context with an instance of the API client
with fds.sdk.FactSetBenchmarks.ApiClient(configuration) as api_client:
    # Create an instance of the API class
    api_instance = benchmark_constituents_api.BenchmarkConstituentsApi(api_client)
    ids = [
        "ids_example",
    ] # [str] | Benchmark Identifiers. Reference the helper endpoint **/id-list** to get a sample list of  valid identifiers. You must be authorized for the `ids` requested, otherwise you will receive an error. <p>***ids limit** =  1 per request*</p>
    date = "date_example" # str | Date of holding expressed in YYYY-MM-DD format. (optional)
    currency = "currency_example" # str | Currency for response. (optional)

    try:
        # Returns the requested Benchmark Constituents and respective Weights, Price and Market Value.
        api_response = api_instance.get_benchmark_constituents(ids, date=date, currency=currency)
        pprint(api_response)
    except fds.sdk.FactSetBenchmarks.ApiException as e:
        print("Exception when calling BenchmarkConstituentsApi->get_benchmark_constituents: %s\n" % e)

    # Get response, http status code and response headers
    # try:
    #     # Returns the requested Benchmark Constituents and respective Weights, Price and Market Value.
    #     api_response, http_status_code, response_headers = api_instance.get_benchmark_constituents_with_http_info(ids, date=date, currency=currency)
    #     pprint(api_response)
    #     pprint(http_status_code)
    #     pprint(response_headers)
    # except fds.sdk.FactSetBenchmarks.ApiException as e:
    #     print("Exception when calling BenchmarkConstituentsApi->get_benchmark_constituents: %s\n" % e)

    # Get response asynchronous
    # try:
    #     # Returns the requested Benchmark Constituents and respective Weights, Price and Market Value.
    #     async_result = api_instance.get_benchmark_constituents_async(ids, date=date, currency=currency)
    #     api_response = async_result.get()
    #     pprint(api_response)
    # except fds.sdk.FactSetBenchmarks.ApiException as e:
    #     print("Exception when calling BenchmarkConstituentsApi->get_benchmark_constituents: %s\n" % e)

    # Get response, http status code and response headers asynchronous
    # try:
    #     # Returns the requested Benchmark Constituents and respective Weights, Price and Market Value.
    #     async_result = api_instance.get_benchmark_constituents_with_http_info_async(ids, date=date, currency=currency)
    #     api_response, http_status_code, response_headers = async_result.get()
    #     pprint(api_response)
    #     pprint(http_status_code)
    #     pprint(response_headers)
    # except fds.sdk.FactSetBenchmarks.ApiException as e:
    #     print("Exception when calling BenchmarkConstituentsApi->get_benchmark_constituents: %s\n" % e)

```

### Using Pandas

To convert an API response to a Pandas DataFrame, it is necessary to transform it first to a dictionary.
```python
import pandas as pd

response_dict = api_response.to_dict()['data']

simple_json_response = pd.DataFrame(response_dict)
nested_json_response = pd.json_normalize(response_dict)
```

### Debugging

The SDK uses the standard library [`logging`](https://docs.python.org/3/library/logging.html#module-logging) module.

Setting `debug` to `True` on an instance of the `Configuration` class sets the log-level of related packages to `DEBUG` 
and enables additional logging in Pythons [HTTP Client](https://docs.python.org/3/library/http.client.html).

**Note**: This prints out sensitive information (e.g. the full request and response). Use with care.

```python
import logging
import fds.sdk.FactSetBenchmarks

logging.basicConfig(level=logging.DEBUG)

configuration = fds.sdk.FactSetBenchmarks.Configuration(...)
configuration.debug = True
```


## Documentation for API Endpoints

All URIs are relative to *https://api.factset.com/content*

Class | Method | HTTP request | Description
------------ | ------------- | ------------- | -------------
*BenchmarkConstituentsApi* | [**get_benchmark_constituents**](docs/BenchmarkConstituentsApi.md#get_benchmark_constituents) | **GET** /factset-benchmarks/v1/constituents | Returns the requested Benchmark Constituents and respective Weights, Price and Market Value.
*BenchmarkConstituentsApi* | [**get_benchmark_constituents_for_list**](docs/BenchmarkConstituentsApi.md#get_benchmark_constituents_for_list) | **POST** /factset-benchmarks/v1/constituents | Returns the requested Benchmark Constituents and respective Weights, Price and Market Value.
*BenchmarkConstituentsApi* | [**get_fi_benchmark_constituents**](docs/BenchmarkConstituentsApi.md#get_fi_benchmark_constituents) | **GET** /factset-benchmarks/v1/fixed-income-constituents | Returns the requested Fixed Income Benchmark Constituents and respective Weights, Price and Market Value.
*BenchmarkConstituentsApi* | [**get_fi_benchmark_constituents_for_list**](docs/BenchmarkConstituentsApi.md#get_fi_benchmark_constituents_for_list) | **POST** /factset-benchmarks/v1/fixed-income-constituents | Returns the requested Benchmark Constituents and respective Weights, Price and Market Value.
*HelperApi* | [**get_benchmark_ids**](docs/HelperApi.md#get_benchmark_ids) | **GET** /factset-benchmarks/v1/id-list | Returns a sample list of Benchmark Identifiers and the benchmark categorization to use in other Benchmark API endpoints.
*HelperApi* | [**get_benchmark_ids_for_list**](docs/HelperApi.md#get_benchmark_ids_for_list) | **POST** /factset-benchmarks/v1/id-list | Returns a sample list of Benchmark Identifiers and the benchmark categorization to use in other Benchmark API endpoints.
*IndexLevelApi* | [**get_benchmark_ratios**](docs/IndexLevelApi.md#get_benchmark_ratios) | **GET** /factset-benchmarks/v1/ratios | Returns the aggregated ratios of a requested benchmark
*IndexLevelApi* | [**get_benchmark_ratios_for_list**](docs/IndexLevelApi.md#get_benchmark_ratios_for_list) | **POST** /factset-benchmarks/v1/ratios | Returns the aggregated ratios of a requested benchmark
*IndexLevelApi* | [**get_index_history**](docs/IndexLevelApi.md#get_index_history) | **GET** /factset-benchmarks/v1/index-history | Retrieves Index Level Prices and Returns information for a list of identifiers and historical date range.
*IndexLevelApi* | [**get_index_history_for_list**](docs/IndexLevelApi.md#get_index_history_for_list) | **POST** /factset-benchmarks/v1/index-history | Retrieves Index Level Prices and Returns information for a list of identifiers and historical date range.
*IndexLevelApi* | [**get_index_snapshot**](docs/IndexLevelApi.md#get_index_snapshot) | **GET** /factset-benchmarks/v1/index-snapshot | Index Level Prices, Returns, and related information as of a single date.
*IndexLevelApi* | [**get_index_snapshot_for_list**](docs/IndexLevelApi.md#get_index_snapshot_for_list) | **POST** /factset-benchmarks/v1/index-snapshot | Retrieves the Index Level Snapshot of Prices and Returns information for a given identifier and single date.


## Documentation For Models

 - [BenchmarkConstituent](docs/BenchmarkConstituent.md)
 - [BenchmarkConstituentsRequest](docs/BenchmarkConstituentsRequest.md)
 - [BenchmarkConstituentsResponse](docs/BenchmarkConstituentsResponse.md)
 - [BenchmarkIdList](docs/BenchmarkIdList.md)
 - [BenchmarkIdListRequest](docs/BenchmarkIdListRequest.md)
 - [BenchmarkIdListResponse](docs/BenchmarkIdListResponse.md)
 - [BenchmarkRatios](docs/BenchmarkRatios.md)
 - [BenchmarkRatiosRequest](docs/BenchmarkRatiosRequest.md)
 - [BenchmarkRatiosResponse](docs/BenchmarkRatiosResponse.md)
 - [Calendar](docs/Calendar.md)
 - [ConstituentIds](docs/ConstituentIds.md)
 - [ErrorResponse](docs/ErrorResponse.md)
 - [ErrorResponseSubErrors](docs/ErrorResponseSubErrors.md)
 - [FIConstituentIds](docs/FIConstituentIds.md)
 - [FamilyFilter](docs/FamilyFilter.md)
 - [FixedIncomeBenchmarkConstituent](docs/FixedIncomeBenchmarkConstituent.md)
 - [FixedIncomeBenchmarkConstituentsRequest](docs/FixedIncomeBenchmarkConstituentsRequest.md)
 - [FixedIncomeBenchmarkConstituentsResponse](docs/FixedIncomeBenchmarkConstituentsResponse.md)
 - [Frequency](docs/Frequency.md)
 - [HedgeType](docs/HedgeType.md)
 - [ImpliedDate](docs/ImpliedDate.md)
 - [IndexHistory](docs/IndexHistory.md)
 - [IndexHistoryRequest](docs/IndexHistoryRequest.md)
 - [IndexHistoryResponse](docs/IndexHistoryResponse.md)
 - [IndexIds](docs/IndexIds.md)
 - [IndexSnapshot](docs/IndexSnapshot.md)
 - [IndexSnapshotRequest](docs/IndexSnapshotRequest.md)
 - [IndexSnapshotResponse](docs/IndexSnapshotResponse.md)
 - [Metrics](docs/Metrics.md)
 - [Periodicity](docs/Periodicity.md)
 - [ReturnType](docs/ReturnType.md)


## Documentation For Authorization


## FactSetApiKey

- **Type**: HTTP basic authentication


## FactSetOAuth2

- **Type**: OAuth
- **Flow**: application
- **Authorization URL**: 
- **Scopes**: N/A


## Notes for Large OpenAPI documents
If the OpenAPI document is large, imports in fds.sdk.FactSetBenchmarks.apis and fds.sdk.FactSetBenchmarks.models may fail with a
RecursionError indicating the maximum recursion limit has been exceeded. In that case, there are a couple of solutions:

Solution 1:
Use specific imports for apis and models like:
- `from fds.sdk.FactSetBenchmarks.api.default_api import DefaultApi`
- `from fds.sdk.FactSetBenchmarks.model.pet import Pet`

Solution 2:
Before importing the package, adjust the maximum recursion limit as shown below:
```
import sys
sys.setrecursionlimit(1500)
import fds.sdk.FactSetBenchmarks
from fds.sdk.FactSetBenchmarks.apis import *
from fds.sdk.FactSetBenchmarks.models import *
```

## Contributing

Please refer to the [contributing guide](../../../../CONTRIBUTING.md).

## Copyright

Copyright 2022 FactSet Research Systems Inc

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.



