# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['meme_generator',
 'meme_generator.memes.5000choyen',
 'meme_generator.memes.addiction',
 'meme_generator.memes.alike',
 'meme_generator.memes.always',
 'meme_generator.memes.always_like',
 'meme_generator.memes.anti_kidnap',
 'meme_generator.memes.anya_suki',
 'meme_generator.memes.applaud',
 'meme_generator.memes.ascension',
 'meme_generator.memes.ask',
 'meme_generator.memes.back_to_work',
 'meme_generator.memes.bad_news',
 'meme_generator.memes.bite',
 'meme_generator.memes.blood_pressure',
 'meme_generator.memes.bocchi_draft',
 'meme_generator.memes.bronya_holdsign',
 'meme_generator.memes.call_110',
 'meme_generator.memes.capoo_rub',
 'meme_generator.memes.captain',
 'meme_generator.memes.charpic',
 'meme_generator.memes.chase_train',
 'meme_generator.memes.china_flag',
 'meme_generator.memes.confuse',
 'meme_generator.memes.coupon',
 'meme_generator.memes.cover_face',
 'meme_generator.memes.crawl',
 'meme_generator.memes.cyan',
 'meme_generator.memes.decent_kiss',
 'meme_generator.memes.dianzhongdian',
 'meme_generator.memes.dinosaur',
 'meme_generator.memes.distracted',
 'meme_generator.memes.divorce',
 'meme_generator.memes.dont_touch',
 'meme_generator.memes.douyin',
 'meme_generator.memes.eat',
 'meme_generator.memes.fanatic',
 'meme_generator.memes.fencing',
 'meme_generator.memes.find_chips',
 'meme_generator.memes.follow',
 'meme_generator.memes.funny_mirror',
 'meme_generator.memes.garbage',
 'meme_generator.memes.gif_subtitle',
 'meme_generator.memes.good_news',
 'meme_generator.memes.google',
 'meme_generator.memes.gun',
 'meme_generator.memes.hammer',
 'meme_generator.memes.high_EQ',
 'meme_generator.memes.hit_screen',
 'meme_generator.memes.hold_grudge',
 'meme_generator.memes.hold_tight',
 'meme_generator.memes.hug_leg',
 'meme_generator.memes.hutao_bite',
 'meme_generator.memes.imprison',
 'meme_generator.memes.incivilization',
 'meme_generator.memes.interview',
 'meme_generator.memes.jiji_king',
 'meme_generator.memes.jiujiu',
 'meme_generator.memes.kaleidoscope',
 'meme_generator.memes.karyl_point',
 'meme_generator.memes.keep_away',
 'meme_generator.memes.kick_ball',
 'meme_generator.memes.kirby_hammer',
 'meme_generator.memes.kiss',
 'meme_generator.memes.klee_eat',
 'meme_generator.memes.knock',
 'meme_generator.memes.learn',
 'meme_generator.memes.lim_x_0',
 'meme_generator.memes.listen_music',
 'meme_generator.memes.little_angel',
 'meme_generator.memes.loading',
 'meme_generator.memes.look_flat',
 'meme_generator.memes.look_this_icon',
 'meme_generator.memes.love_you',
 'meme_generator.memes.luxun_say',
 'meme_generator.memes.make_friend',
 'meme_generator.memes.marriage',
 'meme_generator.memes.meteor',
 'meme_generator.memes.murmur',
 'meme_generator.memes.my_friend',
 'meme_generator.memes.my_wife',
 'meme_generator.memes.name_generator',
 'meme_generator.memes.need',
 'meme_generator.memes.no_response',
 'meme_generator.memes.nokia',
 'meme_generator.memes.not_call_me',
 'meme_generator.memes.overtime',
 'meme_generator.memes.paint',
 'meme_generator.memes.painter',
 'meme_generator.memes.pat',
 'meme_generator.memes.perfect',
 'meme_generator.memes.petpet',
 'meme_generator.memes.play',
 'meme_generator.memes.play_game',
 'meme_generator.memes.police',
 'meme_generator.memes.pornhub',
 'meme_generator.memes.potato',
 'meme_generator.memes.pound',
 'meme_generator.memes.printing',
 'meme_generator.memes.prpr',
 'meme_generator.memes.psyduck',
 'meme_generator.memes.punch',
 'meme_generator.memes.raise_sign',
 'meme_generator.memes.read_book',
 'meme_generator.memes.repeat',
 'meme_generator.memes.rip',
 'meme_generator.memes.rip_angrily',
 'meme_generator.memes.rise_dead',
 'meme_generator.memes.roll',
 'meme_generator.memes.rub',
 'meme_generator.memes.run',
 'meme_generator.memes.safe_sense',
 'meme_generator.memes.scratch_head',
 'meme_generator.memes.scratchcard',
 'meme_generator.memes.scroll',
 'meme_generator.memes.shock',
 'meme_generator.memes.shutup',
 'meme_generator.memes.sit_still',
 'meme_generator.memes.slap',
 'meme_generator.memes.slogan',
 'meme_generator.memes.smash',
 'meme_generator.memes.suck',
 'meme_generator.memes.support',
 'meme_generator.memes.symmetric',
 'meme_generator.memes.tankuku_raisesign',
 'meme_generator.memes.teach',
 'meme_generator.memes.think_what',
 'meme_generator.memes.throw',
 'meme_generator.memes.throw_gif',
 'meme_generator.memes.thump',
 'meme_generator.memes.tightly',
 'meme_generator.memes.together',
 'meme_generator.memes.trance',
 'meme_generator.memes.turn',
 'meme_generator.memes.twist',
 'meme_generator.memes.universal',
 'meme_generator.memes.wakeup',
 'meme_generator.memes.wallpaper',
 'meme_generator.memes.walnut_pad',
 'meme_generator.memes.walnut_zoom',
 'meme_generator.memes.wave',
 'meme_generator.memes.why_at_me',
 'meme_generator.memes.windmill_turn',
 'meme_generator.memes.wish_fail',
 'meme_generator.memes.wooden_fish',
 'meme_generator.memes.worship',
 'meme_generator.memes.wujing',
 'meme_generator.memes.youtube']

package_data = \
{'': ['*']}

install_requires = \
['fastapi>=0.87.0,<1.0.0',
 'filetype>=1.2.0,<2.0.0',
 'httpx>=0.20.0,<1.0.0',
 'loguru>=0.6.0,<0.7.0',
 'pil-utils>=0.1.0,<0.2.0',
 'python-multipart>=0.0.5,<0.0.6',
 'toml>=0.10.2,<0.11.0',
 'tqdm>=4.60.0,<5.0.0',
 'uvicorn>0.17.0,<1.0.0']

entry_points = \
{'console_scripts': ['meme = meme_generator.cli:main']}

setup_kwargs = {
    'name': 'meme-generator',
    'version': '0.0.1a3',
    'description': 'Python package for making fun pictures',
    'long_description': '<div align="center">\n\n# meme-generator\n\n_✨ 表情包生成器，用于制作各种沙雕表情包 ✨_\n\n<p align="center">\n  <img src="https://img.shields.io/github/license/MeetWq/meme-generator" alt="license">\n  <img src="https://img.shields.io/badge/python-3.8+-blue.svg" alt="Python">\n  <a href="https://pypi.org/project/meme-generator">\n    <img src="https://badgen.net/pypi/v/meme-generator" alt="pypi">\n  </a>\n  <a href="https://jq.qq.com/?_wv=1027&k=wDVNrMdr">\n    <img src="https://img.shields.io/badge/QQ%E7%BE%A4-682145034-orange" alt="qq group">\n  </a>\n</p>\n\n</div>\n\n\n## 安装\n\n使用 pip 安装\n\n```bash\npip install meme_generator\n```\n\n\n### 图片下载\n\n由于表情包图片体积较大，`meme-generator` 包含的表情中的图片并不随代码一起打包，需要在安装后手动执行下载命令：\n\n```\nmeme download\n```\n\n也可以调用 `meme_generator/download.py` 中的 `check_resources` 函数进行下载\n\n\n### 字体安装\n\n为确保表情包中的文字生成正常，需要自行安装字体\n\n#### 中文字体 和 emoji字体 安装\n\n根据系统的不同，推荐安装的字体如下：\n\n- Windows:\n\n大部分 Windows 系统自带 [微软雅黑](https://learn.microsoft.com/zh-cn/typography/font-list/microsoft-yahei) 中文字体 和 [Segoe UI Emoji](https://learn.microsoft.com/zh-cn/typography/font-list/segoe-ui-emoji) emoji 字体，一般情况下无需额外安装\n\n\n- Linux:\n\n部分系统可能自带 [文泉驿微米黑](http://wenq.org/wqy2/index.cgi?MicroHei) 中文字体；\n\n对于 Ubuntu 系统，推荐安装 Noto Sans CJK 和 Noto Color Emoji：\n\n```bash\nsudo apt install fonts-noto-cjk fonts-noto-color-emoji\n```\n\n为避免 Noto Sans CJK 中部分中文显示为异体（日文）字形，可以将简体中文设置为默认语言（详见 [ArchWiki](https://wiki.archlinux.org/title/Localization/Simplified_Chinese?rdfrom=https%3A%2F%2Fwiki.archlinux.org%2Findex.php%3Ftitle%3DLocalization_%28%25E7%25AE%2580%25E4%25BD%2593%25E4%25B8%25AD%25E6%2596%2587%29%2FSimplified_Chinese_%28%25E7%25AE%2580%25E4%25BD%2593%25E4%25B8%25AD%25E6%2596%2587%29%26redirect%3Dno#%E4%BF%AE%E6%AD%A3%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87%E6%98%BE%E7%A4%BA%E4%B8%BA%E5%BC%82%E4%BD%93%EF%BC%88%E6%97%A5%E6%96%87%EF%BC%89%E5%AD%97%E5%BD%A2)）：\n\n```bash\nsudo locale-gen zh_CN zh_CN.UTF-8\nsudo update-locale LC_ALL=zh_CN.UTF-8 LANG=zh_CN.UTF-8\nfc-cache -fv\n```\n\n其他 Linux 系统可以自行下载字体文件安装：\n\n思源黑体：https://github.com/adobe-fonts/source-han-sans\n\nNotoSansSC：https://fonts.google.com/noto/specimen/Noto+Sans+SC\n\nNoto Color Emoji：https://github.com/googlefonts/noto-emoji\n\n\n- Mac:\n\n苹果系统一般自带 "PingFang SC" 中文字体 与 "Apple Color Emoji" emoji 字体\n\n\n#### 其他字体安装\n\n某些表情包需要用到一些额外字体，存放于仓库中 [resources/fonts](https://github.com/MeetWq/meme-generator/tree/main/resources/fonts)，需要自行下载安装\n\n具体字体及对应的表情如下：\n\n| 字体名 | 字体文件名 | 用到该字体的表情 | 备注 |\n| --- | --- | --- | --- |\n| [Consolas](https://learn.microsoft.com/zh-cn/typography/font-list/consolas) | [consola.ttf](https://github.com/MeetWq/meme-generator/blob/main/resources/fonts/consola.ttf) | `charpic` |  |\n| [方正像素14](https://www.foundertype.com/index.php/FontInfo/index/id/208) | [FZXS14.ttf](https://github.com/MeetWq/meme-generator/blob/main/resources/fonts/FZXS14.ttf) | `nokia` | 像素体 |\n| [方正手迹-青春日记](https://www.foundertype.com/index.php/FontInfo/index/id/5178) | [FZSJ-QINGCRJ.ttf](https://github.com/MeetWq/meme-generator/blob/main/resources/fonts/FZSJ-QINGCRJ.ttf) | `psyduck` | 手写体 |\n| [方正少儿](https://www.foundertype.com/index.php/FontInfo/index/id/149) | [FZSEJW.ttf](https://github.com/MeetWq/meme-generator/blob/main/resources/fonts/FZSEJW.ttf) | `raise_sign` | 少儿体 |\n| [NotoSansSC](https://fonts.google.com/noto/specimen/Noto+Sans+SC) | [NotoSansSC-Regular.otf](https://github.com/MeetWq/meme-generator/blob/main/resources/fonts/NotoSansSC-Regular.otf) | `5000choyen` |  |\n| [NotoSerifSC](https://fonts.google.com/noto/specimen/Noto+Serif+SC) | [NotoSerifSC-Regular.otf](https://github.com/MeetWq/meme-generator/blob/main/resources/fonts/NotoSerifSC-Regular.otf) | `5000choyen` |  |\n\n\n#### 字体安装方式\n\n不同系统的字体安装方式：\n\n- Windows:\n    - 双击通过字体查看器安装\n    - 复制到字体文件夹：`C:\\Windows\\Fonts`\n\n- Linux:\n\n在 `/usr/share/fonts` 目录下新建文件夹，如 `myfonts`，将字体文件复制到该路径下；\n\n运行如下命令建立字体缓存：\n\n```bash\nfc-cache -fv\n```\n\n- Mac:\n\n使用字体册打开字体文件安装\n\n\n## 使用\n\n### 通过 python 程序调用\n\n参考 [docs/examples/test_meme.py](https://github.com/MeetWq/meme-generator/tree/main/docs/examples/test_meme.py)\n\n\n### 通过命令行使用\n\n```bash\nmeme -h/--help\n```\n- `meme list (ls)` 列出所有已加载的表情\n- `meme info (show) KEY` 查看某个表情的详细信息，如：`meme info petpet`\n- `meme preview KEY` 使用默认（随机）参数生成预览结果，如：`meme preview petpet`\n- `meme generate (make) KEY -t/--text TEXTS -i/--images IMAGES ...` 制作表情，如：`meme generate petpet -i avatar.jpg`\n\n    部分表情有额外的参数，可通过 `-h/--help` 查看，如：`meme generate petpet --help`\n- `meme run (start)` 启动 web server，可通过 api 方式调用\n- `meme download` 下载内置的表情包所需的图片\n\n### 通过 api 方式使用\n\n执行 `meme run` 可以启动 web 服务器\n\nweb 框架用的是 FastApi , 可查看自动生成的交互式 API 文档（访问 http://127.0.0.1:2233/docs ）\n\n可以调用 api 接口使用，python 调用方式可参考 [docs/examples/test_api.py](https://github.com/MeetWq/meme-generator/tree/main/docs/examples/test_api.py)\n\n\n## 配置\n\n默认配置文件位置：\n\n- Windows: `C:\\Users\\<username>\\AppData\\Local\\meme_generator\\config.toml`\n- Linux: `~/.config/meme_generator/config.toml`\n- Mac: `~/Library/Application Support/meme_generator/config.toml`\n\n默认配置：\n```toml\n[meme]\nload_builtin_memes = true  # 是否加载内置表情包\nmeme_dirs = []  # 加载其他位置的表情包，填写文件夹路径\nmeme_disabled_list = []  # 禁用的表情包列表，填写表情的 `key`\n\n[resource]\nresource_url = "https://ghproxy.com/https://github.com/MeetWq/meme-generator"  # 下载内置表情包图片时的资源链接\n\n[gif]\ngif_max_size = 10.0  # 限制生成的 gif 文件大小，单位为 Mb\ngif_max_frames = 100  # 限制生成的 gif 文件帧数\n\n[translate]\nbaidu_trans_appid = ""  # 百度翻译api相关，表情包 `dianzhongdian` 需要使用\nbaidu_trans_apikey = ""  # 可在 百度翻译开放平台 (http://api.fanyi.baidu.com) 申请\n\n[server]\nhost = "127.0.0.1"  # web server 监听地址\nport = 2233  # web server 端口\n```\n\n\n## 开发\n\n### 加载其他表情\n\nTODO\n\n\n## TODO\n\n- [ ] 生成表情列表及预览\n- [ ] 加载其他表情的示例\n',
    'author': 'meetwq',
    'author_email': 'meetwq@gmail.com',
    'maintainer': 'None',
    'maintainer_email': 'None',
    'url': 'https://github.com/MeetWq/meme-generator',
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'entry_points': entry_points,
    'python_requires': '>=3.8,<4.0',
}


setup(**setup_kwargs)
