# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from ..text_processor import text_processor_pb2 as text__processor_dot_text__processor__pb2


class TextProcessorControllerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Summarize = channel.unary_unary(
                '/text_processor_proto.TextProcessorController/Summarize',
                request_serializer=text__processor_dot_text__processor__pb2.Request.SerializeToString,
                response_deserializer=text__processor_dot_text__processor__pb2.Response.FromString,
                )
        self.SentimentAnalysis = channel.unary_unary(
                '/text_processor_proto.TextProcessorController/SentimentAnalysis',
                request_serializer=text__processor_dot_text__processor__pb2.Request.SerializeToString,
                response_deserializer=text__processor_dot_text__processor__pb2.Response.FromString,
                )


class TextProcessorControllerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Summarize(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SentimentAnalysis(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TextProcessorControllerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Summarize': grpc.unary_unary_rpc_method_handler(
                    servicer.Summarize,
                    request_deserializer=text__processor_dot_text__processor__pb2.Request.FromString,
                    response_serializer=text__processor_dot_text__processor__pb2.Response.SerializeToString,
            ),
            'SentimentAnalysis': grpc.unary_unary_rpc_method_handler(
                    servicer.SentimentAnalysis,
                    request_deserializer=text__processor_dot_text__processor__pb2.Request.FromString,
                    response_serializer=text__processor_dot_text__processor__pb2.Response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'text_processor_proto.TextProcessorController', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TextProcessorController(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Summarize(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/text_processor_proto.TextProcessorController/Summarize',
            text__processor_dot_text__processor__pb2.Request.SerializeToString,
            text__processor_dot_text__processor__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SentimentAnalysis(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/text_processor_proto.TextProcessorController/SentimentAnalysis',
            text__processor_dot_text__processor__pb2.Request.SerializeToString,
            text__processor_dot_text__processor__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
