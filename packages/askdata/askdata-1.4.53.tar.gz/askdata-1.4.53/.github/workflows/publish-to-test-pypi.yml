name: Publish Python 🐍 distributions 📦 to PyPI

# This workflows will upload a Python Package using Twine when a release is created

on:
  push:
    branches: [ master ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      # - uses: sonarsource/sonarqube-scan-action@master
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #     SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  build-n-publish:
    name: Build and publish Python 🐍 distributions 📦 to PyPI
    runs-on: ubuntu-latest
    
    steps:
        - uses: actions/checkout@master
        - name: Set up Python 3.7
          uses: actions/setup-python@v1
          with:
            python-version: 3.7
    
        - name: Install pep517
          run: >-
            python -m
            pip install
            pep517
            --user
         
        - name: Build a binary wheel and a source tarball
          run: >-
            python -m
            pep517.build
            --source
            --binary
            --out-dir dist/
            .
            
        - name: Publish distribution 📦 to PyPI
#         if: startsWith(github.ref, 'refs/tags')
          uses: pypa/gh-action-pypi-publish@master
          with:
            password: ${{ secrets.PIP_ASKDATA_PROJECT }}
          
#- name: Publish package to TestPyPI
#  uses: pypa/gh-action-pypi-publish@master
#  with:
#    password: __token__
#    password: ${{ secrets.test_pypi_password }}
#    repository_url: https://test.pypi.org/legacy/
