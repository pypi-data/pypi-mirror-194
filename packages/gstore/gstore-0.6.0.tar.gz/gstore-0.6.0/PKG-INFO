Metadata-Version: 2.1
Name: gstore
Version: 0.6.0
Summary: Synchronize GitHub repositories made easy.
Home-page: https://gstore.readthedocs.io
Author: Serghei Iakovlev
Author-email: egrep@protonmail.ch
Maintainer: Serghei Iakovlev
Maintainer-email: egrep@protonmail.ch
License: GPLv3+
Project-URL: Documentation, https://gstore.readthedocs.io
Project-URL: Changelog, https://gstore.readthedocs.io/en/latest/changelog.html
Project-URL: Bug Tracker, https://github.com/sergeyklay/gstore/issues
Project-URL: Source Code, https://github.com/sergeyklay/gstore
Keywords: git,github,backup,repo,sync
Platform: any
Classifier: Development Status :: 5 - Production/Stable
Classifier: Environment :: Console
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: System Administrators
Classifier: Intended Audience :: Information Technology
Classifier: Natural Language :: English
Classifier: License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Topic :: System :: Archiving :: Backup
Classifier: Topic :: System :: Software Distribution
Classifier: Topic :: Software Development :: Build Tools
Classifier: Topic :: Software Development :: Version Control
Classifier: Topic :: Software Development :: Version Control :: Git
Requires-Python: >=3.8, <4
Description-Content-Type: text/x-rst
Provides-Extra: testing
Provides-Extra: docs
Provides-Extra: develop
License-File: LICENSE

=================================================
gstore: Synchronize GitHub repositories made easy
=================================================


Gstore is a simple tool to synchronize GitHub repositories of your organizations.

Its main goal is to help you make backups and sync your projects automatically
and easily.

.. teaser-end

.. -project-information-

Project Information
===================

Gstore is released under the `GNU General Public Licence version 3 <https://choosealicense.com/licenses/gpl-3.0/>`_,
its documentation lives at `Read the Docs <https://gstore.readthedocs.io/>`_,
the code on `GitHub <https://github.com/sergeyklay/gstore>`_,
and the latest release on `PyPI <https://pypi.org/project/gstore/>`_.
It’s rigorously tested on Python 3.8+.

If you'd like to contribute to Gstore you're most welcome!

.. -support-

Support
=======

Should you have any question, any remark, or if you find a bug, or if there is
something you can't do with the Gstore, please
`open an issue <https://github.com/sergeyklay/gstore/issues>`_.

.. -similar-projects-

Similar projects
================

There are some projects similar to Gstore you may be interested in:

* https://github.com/kennethreitz42/ghsync
* https://github.com/lgg/simple-git-mirror-sync


Contributing
============

If you would like to contribute to ``gstore``, please take a look at the
`current issues <https://github.com/sergeyklay/gstore/issues>`_.  If there is
a bug or feature that you want but it isn't listed, make an issue and work on it.

Bug reports
-----------

*Before raising an issue, please ensure that you are using the latest version
of ``gstore``.*

Please provide the following information with your issue to enable me to
respond as quickly as possible.

* The relevant versions of the packages you are using.
* The steps to recreate your issue.
* The full stacktrace if there is an exception.
* An executable code example where possible

Guidelines for bug reports:

* **Use the GitHub issue search** — check if the issue has already been
  reported.
* **Check if the issue has been fixed** — try to reproduce it using the latest
  ``main`` branch in the repository.
* Isolate the problem — create a reduced test case and a live example.

A good bug report shouldn't leave others needing to chase you up for more
information. Please try to be as detailed as possible in your report. What is
your environment? What steps will reproduce the issue? What OS experience the
problem? What would you expect to be the outcome? All these details will help
people to fix any potential bugs.

Feature requests
----------------

Feature requests are welcome. But take a moment to find out whether your idea
fits with the scope and aims of the project. It's up to *you* to make a strong
case to convince the project's developers of the merits of this feature. Please
provide as much detail and context as possible.

Pull requests
-------------

Good pull requests - patches, improvements, new features - are a fantastic
help. They should remain focused in scope and avoid containing unrelated
commits.

Follow this process if you'd like your work considered for inclusion in the
project:

1. Check for open issues or open a fresh issue to start a discussion around a
   feature idea or a bug.
2. Fork `the repository <https://github.com/joke2k/django-environ>`_
   on GitHub to start making your changes to the ``main`` branch
   (or branch off of it).
3. Write a test which shows that the bug was fixed or that the feature works as
   expected.
4. Send a pull request and bug the maintainer until it gets merged and published.

If you are intending to implement a fairly large feature I'd appreciate if you
open an issue with GitHub detailing your use case and intended solution to
discuss how it might impact other work that is in flight.

I also appreciate it if you take the time to update and write tests for any
changes you submit.

**By submitting a patch, you agree to allow the project owner to license your
work under the same license as that used by the project.**

Resources
---------

* `How to Contribute to Open Source <https://opensource.guide/how-to-contribute/>`_
* `Using Pull Requests <https://help.github.com/articles/about-pull-requests/>`_
* `Writing good commit messages <http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html>`_


Release Information
===================

0.6.0 (2023-03-02)
------------------

Breaking Changes
^^^^^^^^^^^^^^^^

* Drop Python 3.7 support.


Trivial/Internal Changes
^^^^^^^^^^^^^^^^^^^^^^^^

* Bumped ``beautifulsoup4`` from 4.11.0 to 4.11.1.
* Bumped ``check-manifest`` from 0.48 to 0.49.
* Bumped ``coverage`` from 6.3.2 to 7.2.1.
* Bumped ``furo`` from 2020.12 to 2022.12.7.
* Bumped ``gitpython`` from 3.1.17 to 3.1.31.
* Bumped ``pygithub`` from 1.57 to 1.58.0.
* Bumped ``pylint`` from 2.13.5 to 2.16.2.
* Bumped ``pytest`` from 7.1.1 to 7.2.1.
* Bumped ``sphinx`` from 4.3.2 to 6.1.3.

`Full changelog <https://gstore.readthedocs.io/en/latest/changelog.html>`_.

Security Policy
===============


Reporting a Vulnerability
-------------------------

If you discover a security vulnerability within Gstore, please send an e-mail
to Serghei Iakovlev via egrep@protonmail.ch. All security vulnerabilities will
be promptly addressed.


Credits
=======

Gstore is written and maintained by `Serghei Iakovlev <https://github.com/sergeyklay/>`_.

A full list of contributors can be found in `GitHub's overview <https://github.com/sergeyklay/gstore/graphs/contributors>`_.
