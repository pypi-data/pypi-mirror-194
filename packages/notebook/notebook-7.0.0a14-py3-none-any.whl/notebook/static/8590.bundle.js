"use strict";(self.webpackChunk_JUPYTERLAB_CORE_OUTPUT=self.webpackChunk_JUPYTERLAB_CORE_OUTPUT||[]).push([[8590],{68590:(e,t,n)=>{n.r(t),n.d(t,{default:()=>y,editorSyntaxStatus:()=>p,lineColItem:()=>v});var o,r=n(97390),i=n(11040),a=n(38932),d=n(29928),l=n(69198),c=n(32344),s=n(24787),u=n(99828),m=n(69891);!function(e){e.changeKeyMap="codemirror:change-keymap",e.changeTheme="codemirror:change-theme",e.changeMode="codemirror:change-mode",e.find="codemirror:find",e.goToLine="codemirror:go-to-line"}(o||(o={}));const g={id:"@jupyterlab/codemirror-extension:services",provides:i.IEditorServices,activate:function(e){return a.CodeMirrorEditor.prototype.save=()=>{e.commands.execute("docmanager:save")},a.editorServices}},h={id:"@jupyterlab/codemirror-extension:commands",requires:[d.IEditorTracker,c.ISettingRegistry,u.ITranslator],optional:[l.IMainMenu],activate:function(e,t,n,r,i){var d;const l=r.load("jupyterlab"),{commands:c,restored:s}=e;let{theme:u,keyMap:g,scrollPastEnd:h,styleActiveLine:p,styleSelectedText:v,selectionPointer:y,lineWiseCopyCut:C}=a.CodeMirrorEditor.defaultConfig;async function M(e){var t,n,o,r,i;g=e.get("keyMap").composite||g,u=e.get("theme").composite||u,h=null!==(t=e.get("scrollPastEnd").composite)&&void 0!==t?t:h,p=null!==(n=e.get("styleActiveLine").composite)&&void 0!==n?n:p,v=null!==(o=e.get("styleSelectedText").composite)&&void 0!==o?o:v,y=null!==(r=e.get("selectionPointer").composite)&&void 0!==r?r:y,C=null!==(i=e.get("lineWiseCopyCut").composite)&&void 0!==i?i:C}function T(){const e={keyMap:g,theme:u,scrollPastEnd:h,styleActiveLine:p,styleSelectedText:v,selectionPointer:y,lineWiseCopyCut:C};t.forEach((t=>{t.content.editor instanceof a.CodeMirrorEditor&&t.content.editor.setOptions(e)}))}function b(){return null!==t.currentWidget&&t.currentWidget===e.shell.currentWidget}if(Promise.all([n.load(f),s]).then((async([e])=>{await M(e),T(),e.changed.connect((async()=>{await M(e),T()}))})).catch((e=>{console.error(e.message),T()})),t.widgetAdded.connect(((e,t)=>{const n={keyMap:g,theme:u,scrollPastEnd:h,styleActiveLine:p,styleSelectedText:v,selectionPointer:y,lineWiseCopyCut:C};t.content.editor instanceof a.CodeMirrorEditor&&t.content.editor.setOptions(n)})),c.addCommand(o.changeTheme,{label:e=>{var t;return null!==(t=e.theme)&&void 0!==t?t:u},execute:e=>{var t;const o="theme",r=u=null!==(t=e.theme)&&void 0!==t?t:u;return n.set(f,o,r).catch((e=>{console.error(`Failed to set ${f}:${o} - ${e.message}`)}))},isToggled:e=>e.theme===u}),c.addCommand(o.changeKeyMap,{label:e=>{var t;const n=null!==(t=e.keyMap)&&void 0!==t?t:g;return"sublime"===n?l.__("Sublime Text"):l.__(n)},execute:e=>{var t;const o="keyMap",r=g=null!==(t=e.keyMap)&&void 0!==t?t:g;return n.set(f,o,r).catch((e=>{console.error(`Failed to set ${f}:${o} - ${e.message}`)}))},isToggled:e=>e.keyMap===g}),c.addCommand(o.find,{label:l.__("Find…"),execute:()=>{const e=t.currentWidget;e&&e.content.editor.execCommand(m.findNext)},isEnabled:b}),c.addCommand(o.goToLine,{label:l.__("Go to Line…"),execute:e=>{const n=t.currentWidget;if(!n)return;const o=n.content.editor,r=e.line,i=e.column;void 0!==r||void 0!==i?o.setCursorPosition({line:(null!=r?r:1)-1,column:(null!=i?i:1)-1}):o.execCommand(m.gotoLine)},isEnabled:b}),c.addCommand(o.changeMode,{label:e=>{var t;return null!==(t=e.name)&&void 0!==t?t:l.__("Change editor mode to the provided `name`.")},execute:e=>{const n=e.name,o=t.currentWidget;if(n&&o){const e=a.Mode.findByName(n);e&&(o.content.model.mimeType=e.mime)}},isEnabled:b,isToggled:e=>{const n=t.currentWidget;if(!n)return!1;const o=n.content.model.mimeType,r=a.Mode.findByMIME(o),i=r&&r.name;return e.name===i}}),i){const e=null===(d=i.viewMenu.items.find((e=>{var t;return"submenu"===e.type&&"jp-mainmenu-view-codemirror-theme"===(null===(t=e.submenu)||void 0===t?void 0:t.id)})))||void 0===d?void 0:d.submenu;e&&a.Mode.getModeInfo().sort(((e,t)=>{const n=e.name||"",o=t.name||"";return n.localeCompare(o)})).forEach((t=>{0!==t.name.indexOf("brainf")&&e.addItem({command:o.changeMode,args:{...t}})})),i.editMenu.goToLiners.add({id:o.goToLine,isEnabled:e=>null!==t.currentWidget&&t.has(e)})}},autoStart:!0},p={id:"@jupyterlab/codemirror-extension:editor-syntax-status",autoStart:!0,requires:[d.IEditorTracker,r.ILabShell,u.ITranslator],optional:[s.IStatusBar],activate:(e,t,n,o,r)=>{if(!r)return;const i=new a.EditorSyntaxStatus({commands:e.commands,translator:o});n.currentChanged.connect((()=>{const e=n.currentWidget;e&&t.has(e)&&i.model&&(i.model.editor=e.content.editor)})),r.registerStatusItem("@jupyterlab/codemirror-extension:editor-syntax-status",{item:i,align:"left",rank:0,isActive:()=>!!n.currentWidget&&!!t.currentWidget&&n.currentWidget===t.currentWidget})}},v={id:"@jupyterlab/codemirror-extension:line-col-status",autoStart:!0,requires:[u.ITranslator],optional:[r.ILabShell,s.IStatusBar],provides:i.IPositionModel,activate:(e,t,n,o)=>{const r=new i.LineCol(t),a=new Set;function d(e,t){Promise.all([...a].map((e=>e(t.newValue)))).then((e=>{var t;r.model.editor=null!==(t=e.filter((e=>null!==e))[0])&&void 0!==t?t:null})).catch((e=>{console.error("Get editors",e)}))}return o&&o.registerStatusItem(v.id,{item:r,align:"right",rank:2,isActive:()=>!!r.model.editor}),n&&n.currentChanged.connect(d),{addEditorProvider:t=>{a.add(t),e.shell.currentWidget&&d(e.shell,{newValue:e.shell.currentWidget,oldValue:null})},update:()=>{d(e.shell,{oldValue:e.shell.currentWidget,newValue:e.shell.currentWidget})}}}},y=[h,g,p,v],f=h.id}}]);