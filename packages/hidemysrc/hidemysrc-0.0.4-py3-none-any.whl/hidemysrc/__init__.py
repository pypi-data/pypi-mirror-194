from Crypto.Hash import SHA256
from wecrypt import encrypt
from sys import argv
import subprocess
import random
import time
import os

__key__ = "HideMySRC | v0.0.4"


def __sha256_intdigest__(data: bytes):
    return int.from_bytes(SHA256.new(data).digest(), "big")


def __decrypt__(token: str):
    token = list(token)
    key = bytes(__key__, "utf-8")
    digests = [
        __sha256_intdigest__(
            key
            + b"\x68\xed\xc8\x4d\x6c\x72\xc3\x05\x6f\xe4\x3d\x9d\x18\xee\x99\xb7\x9c\xf4\x36\x9d\xa2\x28\x41\x71\x33\x5c\x46\xde\xfd\x8c\x18\xe6"
        ),
        __sha256_intdigest__(
            key
            + b"\x2d\xa0\x6d\x0f\x8e\x06\xc3\x49\xb5\x9a\xcc\x41\x66\x39\x73\xbf\x01\x3a\xa2\xd1\xe9\x4a\x4d\x65\x4d\x84\xb5\x8c\x18\xc5\xd2\x6a"
        ),
        __sha256_intdigest__(
            key
            + b"\xf7\xd9\x64\x94\x51\xd6\x99\xce\x84\xe7\x15\x53\x72\x74\xca\xd2\xd5\x1b\x7d\xa7\x0d\xb2\x66\xd4\xd6\x18\x49\x28\x81\x1b\x47\x53"
        ),
        __sha256_intdigest__(
            key
            + b"\xb4\xe3\x16\x91\x89\xea\x83\xc5\xd2\x42\x2f\x68\x28\xb8\x26\xdf\x63\xf2\xd5\x04\x52\x95\xe1\x8c\x84\x6e\x51\x42\x5d\xf8\x72\x82"
        ),
    ]

    sub0 = [
        168,
        214,
        86,
        248,
        179,
        213,
        4,
        186,
        61,
        138,
        21,
        46,
        26,
        56,
        35,
        137,
        208,
        94,
        45,
        44,
        206,
        154,
        80,
        116,
        184,
        177,
        39,
        7,
        83,
        58,
        2,
        99,
        166,
        191,
        8,
        106,
        153,
        122,
        42,
        37,
        54,
        146,
        129,
        205,
        75,
        180,
        197,
        135,
        48,
        43,
        164,
        218,
        207,
        125,
        92,
        34,
        187,
        31,
        128,
        148,
        130,
        115,
        108,
        0,
        201,
        132,
        52,
        243,
        49,
        199,
        251,
        139,
        215,
        175,
        11,
        40,
        150,
        57,
        211,
        3,
        247,
        189,
        233,
        119,
        219,
        59,
        109,
        185,
        82,
        41,
        85,
        14,
        12,
        159,
        91,
        78,
        118,
        238,
        151,
        209,
        15,
        98,
        113,
        241,
        163,
        200,
        181,
        19,
        81,
        230,
        27,
        176,
        231,
        22,
        25,
        104,
        101,
        72,
        216,
        193,
        64,
        107,
        70,
        240,
        183,
        172,
        53,
        93,
        195,
        66,
        250,
        73,
        157,
        203,
        226,
        84,
        111,
        120,
        105,
        244,
        87,
        170,
        156,
        140,
        235,
        202,
        5,
        229,
        51,
        212,
        65,
        16,
        178,
        103,
        188,
        245,
        13,
        222,
        252,
        68,
        249,
        221,
        224,
        236,
        112,
        198,
        97,
        36,
        162,
        165,
        228,
        89,
        96,
        63,
        60,
        121,
        134,
        246,
        234,
        194,
        253,
        142,
        126,
        133,
        6,
        23,
        158,
        114,
        155,
        47,
        62,
        141,
        123,
        149,
        223,
        190,
        32,
        95,
        220,
        204,
        18,
        136,
        147,
        152,
        1,
        20,
        242,
        225,
        255,
        239,
        145,
        173,
        30,
        210,
        24,
        124,
        79,
        143,
        217,
        232,
        161,
        9,
        174,
        55,
        76,
        67,
        33,
        192,
        237,
        171,
        28,
        169,
        102,
        29,
        227,
        88,
        100,
        160,
        71,
        10,
        17,
        117,
        196,
        50,
        69,
        144,
        131,
        182,
        77,
        167,
        127,
        38,
        90,
        110,
        74,
        254,
    ]
    sub1 = [
        60,
        153,
        19,
        186,
        147,
        82,
        55,
        2,
        130,
        10,
        45,
        227,
        8,
        102,
        196,
        169,
        217,
        87,
        174,
        129,
        57,
        17,
        151,
        88,
        166,
        103,
        244,
        195,
        43,
        18,
        157,
        80,
        240,
        117,
        62,
        138,
        127,
        118,
        198,
        134,
        46,
        79,
        75,
        20,
        204,
        68,
        252,
        181,
        142,
        33,
        120,
        83,
        221,
        156,
        131,
        194,
        16,
        6,
        180,
        247,
        123,
        76,
        9,
        66,
        90,
        148,
        0,
        242,
        59,
        25,
        199,
        231,
        250,
        188,
        238,
        86,
        99,
        128,
        95,
        107,
        119,
        212,
        239,
        94,
        158,
        28,
        220,
        168,
        182,
        159,
        209,
        7,
        114,
        193,
        215,
        248,
        211,
        167,
        178,
        152,
        213,
        81,
        27,
        93,
        201,
        58,
        36,
        97,
        210,
        246,
        164,
        44,
        3,
        254,
        126,
        26,
        233,
        230,
        122,
        24,
        14,
        49,
        63,
        133,
        243,
        98,
        91,
        173,
        115,
        50,
        54,
        235,
        202,
        226,
        155,
        177,
        47,
        105,
        139,
        236,
        170,
        197,
        110,
        92,
        206,
        84,
        52,
        150,
        191,
        69,
        104,
        31,
        51,
        116,
        187,
        12,
        67,
        161,
        237,
        100,
        205,
        207,
        140,
        125,
        124,
        234,
        108,
        85,
        13,
        37,
        71,
        229,
        5,
        251,
        4,
        137,
        165,
        53,
        183,
        144,
        132,
        22,
        30,
        96,
        149,
        109,
        146,
        61,
        73,
        89,
        208,
        241,
        176,
        160,
        171,
        225,
        223,
        21,
        253,
        136,
        255,
        219,
        74,
        179,
        172,
        15,
        106,
        203,
        249,
        11,
        184,
        113,
        185,
        29,
        162,
        39,
        163,
        190,
        101,
        23,
        189,
        154,
        65,
        35,
        72,
        42,
        40,
        143,
        214,
        48,
        78,
        200,
        232,
        216,
        175,
        1,
        145,
        77,
        135,
        222,
        141,
        112,
        192,
        245,
        38,
        111,
        32,
        121,
        224,
        41,
        64,
        228,
        56,
        218,
        34,
        70,
    ]

    for i in range(len(token)):
        random.seed(digests[i % 4] + i)
        token[i] ^= key[i % len(key)]
        token[i] ^= random.randint(0, 255)
        token[i] = sub0[sub1.index(token[i])]
    random.seed()
    return bytes(token).decode("utf-8")


def ex(code):
    _decrypted_code = __decrypt__(code)
    open("./hidemysrc/code.py", "w").write(_decrypted_code)
    subprocess.call(["python", "hidemysrc/code.py"])
    os.remove("hidemysrc/code.py")


def crypter(_dir):
    c = open(_dir, "r")
    _code = c.read()
    data = encrypt(_code, key=__key__)
    c.close()
    open(_dir, "w").write(
        f"""from hidemysrc import ex

class HiddenSRC:
    def __init__(this):
        this.hidemysrc_version = "0.0.4"
        this.hidemysrc_author = "ecriminals"

    def __run__(this):
        ex(code={data})


if __name__ == "__main__":
    HiddenSRC().__run__()
"""
    )
    return f"{_dir} successfully encrypted"


