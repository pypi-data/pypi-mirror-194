{"version":3,"file":"b3d3a594.js","mappings":";;;AAkCA;AACA;;;AAKA;;AAIA;AACA;;AAEA;AAEA;;;;;AAKA;AACA;;AAIA;AAEA;;;AAIA;;;;;;;;;;;;;;;;;;;AAuBA","sources":["webpack://home-assistant-frontend/./src/panels/config/integrations/dialog-yaml-integration.ts"],"sourcesContent":["import \"@material/mwc-button/mwc-button\";\nimport { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport { fireEvent } from \"../../../common/dom/fire_event\";\nimport { HomeAssistant } from \"../../../types\";\nimport { documentationUrl } from \"../../../util/documentation-url\";\nimport { YamlIntegrationDialogParams } from \"./show-add-integration-dialog\";\n\n@customElement(\"dialog-yaml-integration\")\nexport class DialogYamlIntegration extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @state() private _params?: YamlIntegrationDialogParams;\n\n  public showDialog(params: YamlIntegrationDialogParams): void {\n    this._params = params;\n  }\n\n  public closeDialog() {\n    this._params = undefined;\n    fireEvent(this, \"dialog-closed\", { dialog: this.localName });\n  }\n\n  protected render(): TemplateResult {\n    if (!this._params) {\n      return html``;\n    }\n    const manifest = this._params.manifest;\n    const docLink = manifest.is_built_in\n      ? documentationUrl(this.hass, `/integrations/${manifest.domain}`)\n      : manifest.documentation;\n    return html`\n      <ha-dialog\n        open\n        @closed=${this.closeDialog}\n        .heading=${this.hass.localize(\n          \"ui.panel.config.integrations.config_flow.yaml_only_title\"\n        )}\n      >\n        <p>\n          ${this.hass.localize(\n            \"ui.panel.config.integrations.config_flow.yaml_only\"\n          )}\n        </p>\n        <mwc-button @click=${this.closeDialog} slot=\"secondaryAction\">\n          ${this.hass.localize(\"ui.dialogs.generic.cancel\")}\n        </mwc-button>\n        ${docLink\n          ? html`<a\n              .href=${docLink}\n              target=\"_blank\"\n              rel=\"noreferrer noopener\"\n              slot=\"primaryAction\"\n            >\n              <mwc-button @click=${this.closeDialog} dialogInitialFocus>\n                ${this.hass.localize(\n                  \"ui.panel.config.integrations.config_flow.open_documentation\"\n                )}\n              </mwc-button>\n            </a>`\n          : html`<mwc-button @click=${this.closeDialog} dialogInitialFocus>\n              ${this.hass.localize(\"ui.dialogs.generic.ok\")}\n            </mwc-button>`}\n      </ha-dialog>\n    `;\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      :host([inert]) {\n        pointer-events: initial !important;\n        cursor: initial !important;\n      }\n      a {\n        text-decoration: none;\n      }\n      ha-dialog {\n        --mdc-dialog-heading-ink-color: var(--primary-text-color);\n        --mdc-dialog-content-ink-color: var(--primary-text-color);\n        /* Place above other dialogs */\n        --dialog-z-index: 104;\n      }\n      @media all and (min-width: 600px) {\n        ha-dialog {\n          --mdc-dialog-min-width: 400px;\n        }\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"dialog-yaml-integration\": DialogYamlIntegration;\n  }\n}\n"],"names":[],"sourceRoot":""}