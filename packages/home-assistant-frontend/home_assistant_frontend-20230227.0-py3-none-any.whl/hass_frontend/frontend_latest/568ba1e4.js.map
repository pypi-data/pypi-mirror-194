{"version":3,"file":"568ba1e4.js","mappings":";;AAmEA;AACA;AACA;AACA;AACA;;AAGA","sources":["webpack://home-assistant-frontend/./src/panels/lovelace/editor/config-elements/hui-vacuum-commands-tile-feature-editor.ts"],"sourcesContent":["import { HassEntity } from \"home-assistant-js-websocket\";\nimport { html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property, state } from \"lit/decorators\";\nimport memoizeOne from \"memoize-one\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport type { LocalizeFunc } from \"../../../../common/translations/localize\";\nimport type { SchemaUnion } from \"../../../../components/ha-form/types\";\nimport type { HomeAssistant } from \"../../../../types\";\nimport { supportsVacuumCommand } from \"../../tile-features/hui-vacuum-commands-tile-feature\";\nimport {\n  LovelaceTileFeatureContext,\n  VacuumCommandsTileFeatureConfig,\n  VACUUM_COMMANDS,\n} from \"../../tile-features/types\";\nimport type { LovelaceTileFeatureEditor } from \"../../types\";\n\n@customElement(\"hui-vacuum-commands-tile-feature-editor\")\nexport class HuiVacuumCommandsTileFeatureEditor\n  extends LitElement\n  implements LovelaceTileFeatureEditor\n{\n  @property({ attribute: false }) public hass?: HomeAssistant;\n\n  @property({ attribute: false }) public context?: LovelaceTileFeatureContext;\n\n  @state() private _config?: VacuumCommandsTileFeatureConfig;\n\n  public setConfig(config: VacuumCommandsTileFeatureConfig): void {\n    this._config = config;\n  }\n\n  private _schema = memoizeOne(\n    (localize: LocalizeFunc, stateObj?: HassEntity) =>\n      [\n        {\n          name: \"commands\",\n          selector: {\n            select: {\n              multiple: true,\n              options: VACUUM_COMMANDS.filter(\n                (command) =>\n                  stateObj && supportsVacuumCommand(stateObj, command)\n              ).map((command) => ({\n                value: command,\n                label: `${localize(\n                  `ui.panel.lovelace.editor.card.tile.features.types.vacuum-commands.commands_list.${command}`\n                )}`,\n              })),\n            },\n          },\n        },\n      ] as const\n  );\n\n  protected render(): TemplateResult {\n    if (!this.hass || !this._config) {\n      return html``;\n    }\n\n    const stateObj = this.context?.entity_id\n      ? this.hass.states[this.context?.entity_id]\n      : undefined;\n\n    const schema = this._schema(this.hass.localize, stateObj);\n\n    return html`\n      <ha-form\n        .hass=${this.hass}\n        .data=${this._config}\n        .schema=${schema}\n        .computeLabel=${this._computeLabelCallback}\n        @value-changed=${this._valueChanged}\n      ></ha-form>\n    `;\n  }\n\n  private _valueChanged(ev: CustomEvent): void {\n    fireEvent(this, \"config-changed\", { config: ev.detail.value });\n  }\n\n  private _computeLabelCallback = (\n    schema: SchemaUnion<ReturnType<typeof this._schema>>\n  ) => {\n    switch (schema.name) {\n      case \"commands\":\n        return this.hass!.localize(\n          `ui.panel.lovelace.editor.card.tile.features.types.vacuum-commands.${schema.name}`\n        );\n      default:\n        return this.hass!.localize(\n          `ui.panel.lovelace.editor.card.generic.${schema.name}`\n        );\n    }\n  };\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-vacuum-commands-tile-feature-editor\": HuiVacuumCommandsTileFeatureEditor;\n  }\n}\n"],"names":[],"sourceRoot":""}