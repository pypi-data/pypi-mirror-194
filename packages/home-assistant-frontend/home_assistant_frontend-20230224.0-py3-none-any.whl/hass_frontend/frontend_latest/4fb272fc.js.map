{"version":3,"file":"4fb272fc.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA;AACA;AACA;;;AAGA;;;;;AAOA;AACA;;AAEA;;;AAOA;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;;;AAKA;AACA;AACA;AACA;AACA;;AAEA;;;AAKA;AACA;AACA;AACA;AACA;;AAEA;AAGA;;;;;;;;;;;AAiCA","sources":["webpack://home-assistant-frontend/./src/panels/lovelace/editor/hui-sub-element-editor.ts"],"sourcesContent":["import \"@material/mwc-button\";\nimport { mdiArrowLeft } from \"@mdi/js\";\nimport { css, CSSResultGroup, html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property, query, state } from \"lit/decorators\";\nimport { fireEvent, HASSDomEvent } from \"../../../common/dom/fire_event\";\nimport \"../../../components/ha-icon-button\";\nimport type { HomeAssistant } from \"../../../types\";\nimport type { LovelaceRowConfig } from \"../entity-rows/types\";\nimport type { LovelaceHeaderFooterConfig } from \"../header-footer/types\";\nimport \"./entity-row-editor/hui-row-element-editor\";\nimport \"./header-footer-editor/hui-header-footer-element-editor\";\nimport type { HuiElementEditor } from \"./hui-element-editor\";\nimport \"./tile-feature-editor/hui-tile-feature-element-editor\";\nimport type { GUIModeChangedEvent, SubElementEditorConfig } from \"./types\";\n\ndeclare global {\n  interface HASSDomEvents {\n    \"go-back\": undefined;\n  }\n}\n\n@customElement(\"hui-sub-element-editor\")\nexport class HuiSubElementEditor extends LitElement {\n  public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public config!: SubElementEditorConfig;\n\n  @property({ attribute: false }) public context?: any;\n\n  @state() private _guiModeAvailable = true;\n\n  @state() private _guiMode = true;\n\n  @query(\".editor\") private _editorElement?: HuiElementEditor<\n    LovelaceRowConfig | LovelaceHeaderFooterConfig\n  >;\n\n  protected render(): TemplateResult {\n    return html`\n      <div class=\"header\">\n        <div class=\"back-title\">\n          <ha-icon-button\n            .label=${this.hass!.localize(\"ui.common.back\")}\n            .path=${mdiArrowLeft}\n            @click=${this._goBack}\n          ></ha-icon-button>\n          <span slot=\"title\"\n            >${this.hass.localize(\n              `ui.panel.lovelace.editor.sub-element-editor.types.${this.config?.type}`\n            )}</span\n          >\n        </div>\n        <mwc-button\n          slot=\"secondaryAction\"\n          .disabled=${!this._guiModeAvailable}\n          @click=${this._toggleMode}\n        >\n          ${this.hass.localize(\n            this._guiMode\n              ? \"ui.panel.lovelace.editor.edit_card.show_code_editor\"\n              : \"ui.panel.lovelace.editor.edit_card.show_visual_editor\"\n          )}\n        </mwc-button>\n      </div>\n      ${this.config.type === \"row\"\n        ? html`\n            <hui-row-element-editor\n              class=\"editor\"\n              .hass=${this.hass}\n              .value=${this.config.elementConfig}\n              .context=${this.context}\n              @config-changed=${this._handleConfigChanged}\n              @GUImode-changed=${this._handleGUIModeChanged}\n            ></hui-row-element-editor>\n          `\n        : this.config.type === \"header\" || this.config.type === \"footer\"\n        ? html`\n            <hui-headerfooter-element-editor\n              class=\"editor\"\n              .hass=${this.hass}\n              .value=${this.config.elementConfig}\n              .context=${this.context}\n              @config-changed=${this._handleConfigChanged}\n              @GUImode-changed=${this._handleGUIModeChanged}\n            ></hui-headerfooter-element-editor>\n          `\n        : this.config.type === \"tile-feature\"\n        ? html`\n            <hui-tile-feature-element-editor\n              class=\"editor\"\n              .hass=${this.hass}\n              .value=${this.config.elementConfig}\n              .context=${this.context}\n              @config-changed=${this._handleConfigChanged}\n              @GUImode-changed=${this._handleGUIModeChanged}\n            ></hui-tile-feature-element-editor>\n          `\n        : \"\"}\n    `;\n  }\n\n  private _goBack(): void {\n    fireEvent(this, \"go-back\");\n  }\n\n  private _toggleMode(): void {\n    this._editorElement?.toggleMode();\n  }\n\n  private _handleGUIModeChanged(ev: HASSDomEvent<GUIModeChangedEvent>): void {\n    ev.stopPropagation();\n    this._guiMode = ev.detail.guiMode;\n    this._guiModeAvailable = ev.detail.guiModeAvailable;\n  }\n\n  private _handleConfigChanged(ev: CustomEvent): void {\n    this._guiModeAvailable = ev.detail.guiModeAvailable;\n  }\n\n  static get styles(): CSSResultGroup {\n    return css`\n      .header {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n      }\n      .back-title {\n        display: flex;\n        align-items: center;\n        font-size: 18px;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-sub-element-editor\": HuiSubElementEditor;\n  }\n}\n"],"names":[],"sourceRoot":""}