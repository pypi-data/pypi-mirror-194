{"version":3,"file":"c597db0b.js","mappings":";AAoCA;;AAEA;AACA;AACA;AACA;AACA;;AAlBA;AACA;AACA;AACA;AACA;AACA;AACA;;AAeA;AC7BA;AAGA","sources":["webpack://home-assistant-frontend/./src/components/ha-selector/ha-selector-statistic.ts","webpack://home-assistant-frontend/./src/components/ha-state-icon.ts"],"sourcesContent":["import { html, LitElement } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport type { StatisticSelector } from \"../../data/selector\";\nimport { HomeAssistant } from \"../../types\";\nimport \"../entity/ha-statistics-picker\";\n\n@customElement(\"ha-selector-statistic\")\nexport class HaStatisticSelector extends LitElement {\n  @property() public hass!: HomeAssistant;\n\n  @property() public selector!: StatisticSelector;\n\n  @property() public value?: any;\n\n  @property() public label?: string;\n\n  @property() public helper?: string;\n\n  @property({ type: Boolean }) public disabled = false;\n\n  @property({ type: Boolean }) public required = true;\n\n  protected render() {\n    if (!this.selector.statistic.multiple) {\n      return html`<ha-statistic-picker\n        .hass=${this.hass}\n        .value=${this.value}\n        .label=${this.label}\n        .helper=${this.helper}\n        .disabled=${this.disabled}\n        .required=${this.required}\n        allow-custom-entity\n      ></ha-statistic-picker>`;\n    }\n\n    return html`\n      ${this.label ? html`<label>${this.label}</label>` : \"\"}\n      <ha-statistics-picker\n        .hass=${this.hass}\n        .value=${this.value}\n        .helper=${this.helper}\n        .disabled=${this.disabled}\n        .required=${this.required}\n      ></ha-statistics-picker>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-selector-statistic\": HaStatisticSelector;\n  }\n}\n","import { HassEntity } from \"home-assistant-js-websocket\";\nimport { html, LitElement, TemplateResult } from \"lit\";\nimport { customElement, property } from \"lit/decorators\";\nimport { stateIconPath } from \"../common/entity/state_icon_path\";\nimport \"./ha-icon\";\nimport \"./ha-svg-icon\";\n\n@customElement(\"ha-state-icon\")\nexport class HaStateIcon extends LitElement {\n  @property({ attribute: false }) public state?: HassEntity;\n\n  @property() public icon?: string;\n\n  protected render(): TemplateResult {\n    if (this.icon || this.state?.attributes.icon) {\n      return html`<ha-icon\n        .icon=${this.icon || this.state?.attributes.icon}\n      ></ha-icon>`;\n    }\n    return html`<ha-svg-icon .path=${stateIconPath(this.state)}></ha-svg-icon>`;\n  }\n}\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-state-icon\": HaStateIcon;\n  }\n}\n"],"names":[],"sourceRoot":""}