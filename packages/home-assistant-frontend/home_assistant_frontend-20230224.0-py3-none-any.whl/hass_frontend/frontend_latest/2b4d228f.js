"use strict";(self.webpackChunkhome_assistant_frontend=self.webpackChunkhome_assistant_frontend||[]).push([[66054],{79021:(e,t,r)=>{r.d(t,{Z:()=>o});var n=r(90394),s=r(34327),a=r(23682);function o(e,t){(0,a.Z)(2,arguments);var r=(0,s.Z)(e),o=(0,n.Z)(t);return isNaN(o)?new Date(NaN):o?(r.setDate(r.getDate()+o),r):r}},59699:(e,t,r)=>{r.d(t,{Z:()=>i});var n=r(90394),s=r(39244),a=r(23682),o=36e5;function i(e,t){(0,a.Z)(2,arguments);var r=(0,n.Z)(t);return(0,s.Z)(e,r*o)}},39244:(e,t,r)=>{r.d(t,{Z:()=>o});var n=r(90394),s=r(34327),a=r(23682);function o(e,t){(0,a.Z)(2,arguments);var r=(0,s.Z)(e).getTime(),o=(0,n.Z)(t);return new Date(r+o)}},32182:(e,t,r)=>{r.d(t,{Z:()=>o});var n=r(90394),s=r(34327),a=r(23682);function o(e,t){(0,a.Z)(2,arguments);var r=(0,s.Z)(e),o=(0,n.Z)(t);if(isNaN(o))return new Date(NaN);if(!o)return r;var i=r.getDate(),c=new Date(r.getTime());return c.setMonth(r.getMonth()+o+1,0),i>=c.getDate()?c:(r.setFullYear(c.getFullYear(),c.getMonth(),i),r)}},93752:(e,t,r)=>{r.d(t,{Z:()=>a});var n=r(34327),s=r(23682);function a(e){(0,s.Z)(1,arguments);var t=(0,n.Z)(e);return t.setHours(23,59,59,999),t}},70390:(e,t,r)=>{r.d(t,{Z:()=>s});var n=r(93752);function s(){return(0,n.Z)(Date.now())}},47538:(e,t,r)=>{function n(){var e=new Date,t=e.getFullYear(),r=e.getMonth(),n=e.getDate(),s=new Date(0);return s.setFullYear(t,r,n-1),s.setHours(23,59,59,999),s}r.d(t,{Z:()=>n})},27088:(e,t,r)=>{r.d(t,{Z:()=>s});var n=r(59429);function s(){return(0,n.Z)(Date.now())}},83008:(e,t,r)=>{function n(){var e=new Date,t=e.getFullYear(),r=e.getMonth(),n=e.getDate(),s=new Date(0);return s.setFullYear(t,r,n-1),s.setHours(0,0,0,0),s}r.d(t,{Z:()=>n})},92306:(e,t,r)=>{r.d(t,{v:()=>n});const n=(e,t)=>{const r={};for(const n of e){const e=t(n);e in r?r[e].push(n):r[e]=[n]}return r}},11950:(e,t,r)=>{r.d(t,{l:()=>n});const n=async(e,t)=>new Promise((r=>{const n=t(e,(e=>{n(),r(e)}))}))},81582:(e,t,r)=>{r.d(t,{DJ:()=>a,LZ:()=>n,Nn:()=>l,Ny:()=>_,Q4:()=>s,SO:()=>i,T0:()=>u,iJ:()=>c,pB:()=>o});const n=32143==r.j?["migration_error","setup_error","setup_retry"]:null,s=32143==r.j?["not_loaded","loaded","setup_error","setup_retry"]:null,a=(e,t,r)=>{const n={type:"config_entries/subscribe"};return r&&r.type&&(n.type_filter=r.type),e.connection.subscribeMessage((e=>t(e)),n)},o=(e,t)=>{const r={};return t&&(t.type&&(r.type_filter=t.type),t.domain&&(r.domain=t.domain)),e.callWS({type:"config_entries/get",...r})},i=(e,t,r)=>e.callWS({type:"config_entries/update",entry_id:t,...r}),c=(e,t)=>e.callApi("DELETE",`config/config_entries/entry/${t}`),l=(e,t)=>e.callApi("POST",`config/config_entries/entry/${t}/reload`),_=(e,t)=>e.callWS({type:"config_entries/disable",entry_id:t,disabled_by:"user"}),u=(e,t)=>e.callWS({type:"config_entries/disable",entry_id:t,disabled_by:null})},55424:(e,t,r)=>{r.d(t,{Bm:()=>w,Cj:()=>T,G9:()=>H,Jj:()=>E,KU:()=>k,P:()=>S,UB:()=>x,ZC:()=>C,_Z:()=>P,b:()=>I,gy:()=>W,iK:()=>b,jB:()=>L,o1:()=>v,rl:()=>Z,vE:()=>z,xZ:()=>D,yH:()=>N});var n=r(4535),s=r(59699),a=r(32182),o=r(79021),i=r(39244),c=r(27088),l=r(83008),_=r(70390),u=r(47538),d=r(97330),y=r(92306),g=r(11950),p=r(81582),f=r(74186),m=r(38014);const h=[],w=()=>({stat_energy_from:"",stat_cost:null,entity_energy_price:null,number_energy_price:null}),v=()=>({stat_energy_to:"",stat_compensation:null,entity_energy_price:null,number_energy_price:null}),b=()=>({type:"grid",flow_from:[],flow_to:[],cost_adjustment_day:0}),Z=()=>({type:"solar",stat_energy_from:"",config_entry_solar_forecast:null}),S=()=>({type:"battery",stat_energy_from:"",stat_energy_to:""}),k=()=>({type:"gas",stat_energy_from:"",stat_cost:null,entity_energy_price:null,number_energy_price:null}),T=()=>({type:"water",stat_energy_from:"",stat_cost:null,entity_energy_price:null,number_energy_price:null}),D=e=>e.callWS({type:"energy/info"}),W=async e=>(await e.loadBackendTranslation("issues","energy"),e.callWS({type:"energy/validate"})),C=e=>e.callWS({type:"energy/get_prefs"}),P=async(e,t)=>{const r=e.callWS({type:"energy/save_prefs",...t});return O(e),r},j=async(e,t,r,n,s,a="hour")=>e.callWS({type:"energy/fossil_energy_consumption",start_time:t.toISOString(),end_time:null==s?void 0:s.toISOString(),energy_statistic_ids:r,co2_statistic_id:n,period:a}),E=e=>(0,y.v)(e.energy_sources,(e=>e.type)),N=(e,t,r)=>{const n=[];for(const s of e.energy_sources)if(!r||r.includes(s.type))if("solar"!==s.type)if("gas"!==s.type&&"water"!==s.type)if("battery"!==s.type){for(const e of s.flow_from){n.push(e.stat_energy_from),e.stat_cost&&n.push(e.stat_cost);const r=t.cost_sensors[e.stat_energy_from];r&&n.push(r)}for(const e of s.flow_to){n.push(e.stat_energy_to),e.stat_compensation&&n.push(e.stat_compensation);const r=t.cost_sensors[e.stat_energy_to];r&&n.push(r)}}else n.push(s.stat_energy_from),n.push(s.stat_energy_to);else{n.push(s.stat_energy_from),s.stat_cost&&n.push(s.stat_cost);const e=t.cost_sensors[s.stat_energy_from];e&&n.push(e)}else n.push(s.stat_energy_from);return n},O=e=>{h.forEach((t=>{const r=x(e,{key:t});r.clearPrefs(),r._active&&r.refresh()}))},x=(e,t={})=>{let r="_energy";if(t.key){if(!t.key.startsWith("energy_"))throw new Error("Key need to start with energy_");r=`_${t.key}`}if(e.connection[r])return e.connection[r];h.push(t.key);const y=(0,d._)(e.connection,r,(async()=>{if(y.prefs||(y.prefs=await C(e)),y._refreshTimeout&&clearTimeout(y._refreshTimeout),y._active&&(!y.end||y.end>new Date)){const e=new Date;e.getMinutes()>=20&&e.setHours(e.getHours()+1),e.setMinutes(20,0,0),y._refreshTimeout=window.setTimeout((()=>y.refresh()),e.getTime()-Date.now())}return(async(e,t,r,c,l)=>{const[_,u,d]=await Promise.all([(0,p.pB)(e,{domain:"co2signal"}),(0,g.l)(e.connection,f.LM),D(e)]),y=_.length?_[0]:void 0;let h;if(y)for(const t of u){if(t.config_entry_id!==y.entry_id)continue;const r=e.states[t.entity_id];if(r&&"%"===r.attributes.unit_of_measurement){h=r.entity_id;break}}const w=[];for(const e of t.energy_sources)if("grid"===e.type)for(const t of e.flow_from)w.push(t.stat_energy_from);const v=N(t,d,["grid","solar","battery","gas"]),b=N(t,d,["water"]),Z=[...v,...b],S=(0,n.Z)(c||new Date,r),k=S>35?"month":S>2?"day":"hour",T=(0,s.Z)(r,-1),W=e.config.unit_system.length||"",C={energy:"kWh",volume:"km"===W?"m続":"ft続"},P={volume:"km"===W?"L":"gal"},E={...v.length?await(0,m.dL)(e,T,c,v,k,C,["sum"]):{},...b.length?await(0,m.dL)(e,T,c,b,k,P,["sum"]):{}};let O,x,L,M,H;if(l){x=S>27&&S<32?(0,a.Z)(r,-1):(0,o.Z)(r,-1*(S+1));const t=(0,s.Z)(x,-1);L=(0,i.Z)(r,-1),O={...v.length?await(0,m.dL)(e,t,L,v,k,C,["sum"]):{},...b.length?await(0,m.dL)(e,t,L,b,k,P,["sum"]):{}}}void 0!==h&&(M=await j(e,r,w,h,c,S>35?"month":S>2?"day":"hour"),l&&(H=await j(e,x,w,h,L,S>35?"month":S>2?"day":"hour"))),Object.values(E).forEach((e=>{e.length&&new Date(e[0].start)>T&&e.unshift({...e[0],start:T.getTime(),end:T.getTime(),sum:0,state:0})}));const z=await(0,m.Py)(e,Z),I={};return z.forEach((e=>{I[e.statistic_id]=e})),{start:r,end:c,startCompare:x,endCompare:L,info:d,prefs:t,stats:E,statsMetadata:I,statsCompare:O,co2SignalConfigEntry:y,co2SignalEntity:h,fossilEnergyConsumption:M,fossilEnergyConsumptionCompare:H}})(e,y.prefs,y.start,y.end,y.compare)})),w=y.subscribe;y.subscribe=e=>{const t=w(e);return y._active++,()=>{y._active--,y._active<1&&(clearTimeout(y._refreshTimeout),y._refreshTimeout=void 0),t()}},y._active=0,y.prefs=t.prefs;const v=new Date;y.start=v.getHours()>0?(0,c.Z)():(0,l.Z)(),y.end=v.getHours()>0?(0,_.Z)():(0,u.Z)();const b=()=>{y._updatePeriodTimeout=window.setTimeout((()=>{y.start=(0,c.Z)(),y.end=(0,_.Z)(),b()}),(0,s.Z)((0,_.Z)(),1).getTime()-Date.now())};return b(),y.clearPrefs=()=>{y.prefs=void 0},y.setPeriod=(e,t)=>{var r;y.start=e,y.end=t,y.start.getTime()!==(0,c.Z)().getTime()||(null===(r=y.end)||void 0===r?void 0:r.getTime())!==(0,_.Z)().getTime()||y._updatePeriodTimeout?y._updatePeriodTimeout&&(clearTimeout(y._updatePeriodTimeout),y._updatePeriodTimeout=void 0):b()},y.setCompare=e=>{y.compare=e},y},L=e=>e.callWS({type:"energy/solar_forecast"}),M=["volume","energy"],H=(e,t={},r)=>{for(const n of e.energy_sources){if("gas"!==n.type)continue;if(r&&r===n.stat_energy_from)continue;const e=t[n.stat_energy_from];if(M.includes(null==e?void 0:e.unit_class))return e.unit_class}},z=(e,t,r={})=>{const n=H(t,r);if(void 0!==n)return"energy"===n?"kWh":"km"===e.config.unit_system.length?"m続":"ft続"},I=e=>"km"===e.config.unit_system.length?"L":"gal"},38014:(e,t,r)=>{r.d(t,{Cj:()=>l,Hs:()=>v,Kd:()=>h,Kj:()=>u,Nw:()=>y,Py:()=>a,Z0:()=>f,_Y:()=>i,dL:()=>o,dO:()=>w,hN:()=>_,h_:()=>c,j2:()=>m,q6:()=>d,uR:()=>s});var n=r(91741);const s=(e,t)=>e.callWS({type:"recorder/list_statistic_ids",statistic_type:t}),a=(e,t)=>e.callWS({type:"recorder/get_statistics_metadata",statistic_ids:t}),o=(e,t,r,n,s="hour",a,o)=>e.callWS({type:"recorder/statistics_during_period",start_time:t.toISOString(),end_time:null==r?void 0:r.toISOString(),statistic_ids:n,period:s,units:a,types:o}),i=(e,t,r,n)=>e.callWS({type:"recorder/statistic_during_period",statistic_id:t,units:n,fixed_period:r.fixed_period?{start_time:r.fixed_period.start instanceof Date?r.fixed_period.start.toISOString():r.fixed_period.start,end_time:r.fixed_period.end instanceof Date?r.fixed_period.end.toISOString():r.fixed_period.end}:void 0,calendar:r.calendar,rolling_window:r.rolling_window}),c=e=>e.callWS({type:"recorder/validate_statistics"}),l=(e,t,r)=>e.callWS({type:"recorder/update_statistics_metadata",statistic_id:t,unit_of_measurement:r}),_=(e,t)=>e.callWS({type:"recorder/clear_statistics",statistic_ids:t}),u=e=>{if(!e||e.length<2)return null;const t=e[e.length-1].sum;if(null==t)return null;const r=e[0].sum;return null==r?t:t-r},d=(e,t)=>{let r=null;for(const n of t){if(!(n in e))continue;const t=u(e[n]);null!==t&&(null===r?r=t:r+=t)}return r},y=(e,t)=>e.some((e=>null!==e[t])),g=["mean","min","max"],p=["sum"],f=(e,t)=>!(!g.includes(t)||!e.has_mean)||!(!p.includes(t)||!e.has_sum),m=(e,t,r,n,s)=>{const a=new Date(r).toISOString();return e.callWS({type:"recorder/adjust_sum_statistics",statistic_id:t,start_time:a,adjustment:n,adjustment_unit_of_measurement:s})},h=(e,t,r)=>{const s=e.states[t];return s?(0,n.C)(s):(null==r?void 0:r.name)||t},w=(e,t,r)=>{let n;var s;t&&(n=null===(s=e.states[t])||void 0===s?void 0:s.attributes.unit_of_measurement);return void 0===n?null==r?void 0:r.statistics_unit_of_measurement:n},v=e=>e.includes(":")},66054:(e,t,r)=>{r.r(t),r.d(t,{EnergyStrategy:()=>s});var n=r(55424);class s{static async generateView(e){var t,s;const a=e.hass,o={cards:[]};let i;try{i=await(0,n.ZC)(a)}catch(e){return"not_found"===e.code?(async()=>(await Promise.all([r.e(29021),r.e(88369)]).then(r.bind(r,55158)),{type:"panel",cards:[{type:"custom:energy-setup-wizard-card"}]}))():(o.cards.push({type:"markdown",content:`An error occurred while fetching your energy preferences: ${e.message}.`}),o)}o.type="sidebar";const c=i.energy_sources.find((e=>"grid"===e.type)),l=c&&c.flow_to.length,_=i.energy_sources.some((e=>"solar"===e.type)),u=i.energy_sources.some((e=>"gas"===e.type)),d=i.energy_sources.some((e=>"water"===e.type));return(e.narrow||null!==(t=e.view.strategy)&&void 0!==t&&null!==(s=t.options)&&void 0!==s&&s.show_date_selection)&&o.cards.push({type:"energy-date-selection",collection_key:"energy_dashboard",view_layout:{position:"sidebar"}}),o.cards.push({type:"energy-compare",collection_key:"energy_dashboard"}),c&&o.cards.push({title:a.localize("ui.panel.energy.cards.energy_usage_graph_title"),type:"energy-usage-graph",collection_key:"energy_dashboard"}),_&&o.cards.push({title:a.localize("ui.panel.energy.cards.energy_solar_graph_title"),type:"energy-solar-graph",collection_key:"energy_dashboard"}),u&&o.cards.push({title:a.localize("ui.panel.energy.cards.energy_gas_graph_title"),type:"energy-gas-graph",collection_key:"energy_dashboard"}),d&&o.cards.push({title:a.localize("ui.panel.energy.cards.energy_water_graph_title"),type:"energy-water-graph",collection_key:"energy_dashboard"}),c&&o.cards.push({title:a.localize("ui.panel.energy.cards.energy_distribution_title"),type:"energy-distribution",view_layout:{position:"sidebar"},collection_key:"energy_dashboard"}),(c||_)&&o.cards.push({title:a.localize("ui.panel.energy.cards.energy_sources_table_title"),type:"energy-sources-table",collection_key:"energy_dashboard"}),l&&o.cards.push({type:"energy-grid-neutrality-gauge",view_layout:{position:"sidebar"},collection_key:"energy_dashboard"}),_&&l&&o.cards.push({type:"energy-solar-consumed-gauge",view_layout:{position:"sidebar"},collection_key:"energy_dashboard"}),c&&o.cards.push({type:"energy-carbon-consumed-gauge",view_layout:{position:"sidebar"},collection_key:"energy_dashboard"}),i.device_consumption.length&&o.cards.push({title:a.localize("ui.panel.energy.cards.energy_devices_graph_title"),type:"energy-devices-graph",collection_key:"energy_dashboard"}),o}}}}]);