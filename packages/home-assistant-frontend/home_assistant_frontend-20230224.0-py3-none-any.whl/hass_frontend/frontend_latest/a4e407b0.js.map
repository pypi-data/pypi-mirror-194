{"version":3,"file":"a4e407b0.js","mappings":";AA2EA;;;;AAMA;;AAEA;;;AARA;AAeA;;AAIA;;AAKA;AACA;;AAEA;;AAIA;;;;;;AAWA;;AAMA;AACA;;;AAGA;;;;AAxDA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkIA","sources":["webpack://home-assistant-frontend/./src/dialogs/more-info/controls/more-info-alarm_control_panel.ts"],"sourcesContent":["import \"@material/mwc-button\";\nimport type { HassEntity } from \"home-assistant-js-websocket\";\nimport { css, html, LitElement, PropertyValues, TemplateResult } from \"lit\";\nimport { customElement, property, state, query } from \"lit/decorators\";\nimport { classMap } from \"lit/directives/class-map\";\nimport \"../../../components/ha-textfield\";\nimport { supportsFeature } from \"../../../common/entity/supports-feature\";\nimport type { HaTextField } from \"../../../components/ha-textfield\";\nimport {\n  callAlarmAction,\n  FORMAT_NUMBER,\n  AlarmControlPanelEntityFeature,\n} from \"../../../data/alarm_control_panel\";\nimport type { HomeAssistant } from \"../../../types\";\n\nconst BUTTONS = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"\", \"0\", \"clear\"];\nconst DISARM_ACTIONS = [\"disarm\"];\n\n@customElement(\"more-info-alarm_control_panel\")\nexport class MoreInfoAlarmControlPanel extends LitElement {\n  @property({ attribute: false }) public hass!: HomeAssistant;\n\n  @property({ attribute: false }) public stateObj?: HassEntity;\n\n  @state() private _armActions: string[] = [];\n\n  @query(\"#alarmCode\") private _input?: HaTextField;\n\n  public willUpdate(changedProps: PropertyValues<this>) {\n    super.willUpdate(changedProps);\n\n    if (!this.stateObj || !changedProps.has(\"stateObj\")) {\n      return;\n    }\n\n    this._armActions = [];\n    if (\n      supportsFeature(this.stateObj, AlarmControlPanelEntityFeature.ARM_HOME)\n    ) {\n      this._armActions.push(\"arm_home\");\n    }\n    if (\n      supportsFeature(this.stateObj, AlarmControlPanelEntityFeature.ARM_AWAY)\n    ) {\n      this._armActions.push(\"arm_away\");\n    }\n    if (\n      supportsFeature(this.stateObj, AlarmControlPanelEntityFeature.ARM_NIGHT)\n    ) {\n      this._armActions.push(\"arm_night\");\n    }\n    if (\n      supportsFeature(\n        this.stateObj,\n        AlarmControlPanelEntityFeature.ARM_CUSTOM_BYPASS\n      )\n    ) {\n      this._armActions.push(\"arm_custom_bypass\");\n    }\n    if (\n      supportsFeature(\n        this.stateObj,\n        AlarmControlPanelEntityFeature.ARM_VACATION\n      )\n    ) {\n      this._armActions.push(\"arm_vacation\");\n    }\n  }\n\n  protected render(): TemplateResult {\n    if (!this.hass || !this.stateObj) {\n      return html``;\n    }\n\n    return html`\n      ${!this.stateObj.attributes.code_format\n        ? \"\"\n        : html`\n            <div class=\"center\">\n              <ha-textfield\n                id=\"alarmCode\"\n                .label=${this.hass.localize(\"ui.card.alarm_control_panel.code\")}\n                type=\"password\"\n                .inputMode=${this.stateObj.attributes.code_format ===\n                FORMAT_NUMBER\n                  ? \"numeric\"\n                  : \"text\"}\n              ></ha-textfield>\n            </div>\n          `}\n      ${this.stateObj.attributes.code_format !== FORMAT_NUMBER\n        ? \"\"\n        : html`\n            <div id=\"keypad\">\n              ${BUTTONS.map((value) =>\n                value === \"\"\n                  ? html`<mwc-button disabled></mwc-button>`\n                  : html`\n                      <mwc-button\n                        .value=${value}\n                        @click=${this._handlePadClick}\n                        outlined\n                        class=${classMap({\n                          numberkey: value !== \"clear\",\n                        })}\n                      >\n                        ${value === \"clear\"\n                          ? this.hass!.localize(\n                              `ui.card.alarm_control_panel.clear_code`\n                            )\n                          : value}\n                      </mwc-button>\n                    `\n              )}\n            </div>\n          `}\n      <div class=\"actions\">\n        ${(this.stateObj.state === \"disarmed\"\n          ? this._armActions\n          : DISARM_ACTIONS\n        ).map(\n          (stateAction) => html`\n            <mwc-button\n              .action=${stateAction}\n              @click=${this._handleActionClick}\n              outlined\n            >\n              ${this.hass!.localize(\n                `ui.card.alarm_control_panel.${stateAction}`\n              )}\n            </mwc-button>\n          `\n        )}\n      </div>\n    `;\n  }\n\n  private _handlePadClick(e: MouseEvent): void {\n    const val = (e.currentTarget! as any).value;\n    this._input!.value = val === \"clear\" ? \"\" : this._input!.value + val;\n  }\n\n  private _handleActionClick(e: MouseEvent): void {\n    const input = this._input;\n    callAlarmAction(\n      this.hass!,\n      this.stateObj!.entity_id,\n      (e.currentTarget! as any).action,\n      input?.value || undefined\n    );\n    if (input) {\n      input.value = \"\";\n    }\n  }\n\n  static styles = css`\n    ha-textfield {\n      display: block;\n      margin: 8px;\n      max-width: 150px;\n      text-align: center;\n    }\n\n    #keypad {\n      display: flex;\n      justify-content: center;\n      flex-wrap: wrap;\n      margin: auto;\n      width: 100%;\n      max-width: 300px;\n    }\n\n    #keypad mwc-button {\n      padding: 8px;\n      width: 30%;\n      box-sizing: border-box;\n    }\n\n    .actions {\n      margin: 0;\n      display: flex;\n      flex-wrap: wrap;\n      justify-content: center;\n    }\n\n    .actions mwc-button {\n      margin: 0 4px 4px;\n    }\n\n    mwc-button#disarm {\n      color: var(--error-color);\n    }\n\n    mwc-button.numberkey {\n      --mdc-typography-button-font-size: var(--keypad-font-size, 0.875rem);\n    }\n\n    .center {\n      display: flex;\n      justify-content: center;\n    }\n  `;\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"more-info-alarm_control_panel\": MoreInfoAlarmControlPanel;\n  }\n}\n"],"names":[],"sourceRoot":""}