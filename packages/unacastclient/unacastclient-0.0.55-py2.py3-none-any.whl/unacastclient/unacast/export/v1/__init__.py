# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: unacast/export/v1/export_service.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import Optional

import betterproto
import grpclib


@dataclass(eq=False, repr=False)
class CreateExportRequest(betterproto.Message):
    metric_id: str = betterproto.string_field(1)
    catalog_id: str = betterproto.string_field(2)
    # Will there be a separate role for being able to export?
    billing_context: str = betterproto.string_field(3)
    filter: "__catalog_v1__.QueryMetricFilters" = betterproto.message_field(5)
    target_config: "TargetConfig" = betterproto.message_field(6)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class CreateExportResponse(betterproto.Message):
    job_id: str = betterproto.string_field(1)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class TargetConfig(betterproto.Message):
    big_query_config: "BigQueryConfig" = betterproto.message_field(1)

    def __post_init__(self) -> None:
        super().__post_init__()


@dataclass(eq=False, repr=False)
class BigQueryConfig(betterproto.Message):
    project_id: str = betterproto.string_field(1)
    dataset_id: str = betterproto.string_field(2)
    table_id: str = betterproto.string_field(3)

    def __post_init__(self) -> None:
        super().__post_init__()


class ExportServiceStub(betterproto.ServiceStub):
    """* This is the service for Exporting data from Unacat"""

    async def create_export(
        self,
        *,
        metric_id: str = "",
        catalog_id: str = "",
        billing_context: str = "",
        filter: "__catalog_v1__.QueryMetricFilters" = None,
        target_config: "TargetConfig" = None,
    ) -> "CreateExportResponse":

        request = CreateExportRequest()
        request.metric_id = metric_id
        request.catalog_id = catalog_id
        request.billing_context = billing_context
        if filter is not None:
            request.filter = filter
        if target_config is not None:
            request.target_config = target_config

        return await self._unary_unary(
            "/unacast.export.v1.ExportService/CreateExport",
            request,
            CreateExportResponse,
        )


from ...catalog import v1 as __catalog_v1__
