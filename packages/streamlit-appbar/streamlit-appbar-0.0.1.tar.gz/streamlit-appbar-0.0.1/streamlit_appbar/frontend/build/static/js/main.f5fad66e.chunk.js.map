{"version":3,"sources":["StreamlitAppbar.tsx","index.tsx"],"names":["StreamlitAppbar","_StreamlitComponentBa","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","name","modes","props","height","title","logo","bgColor","txtColor","default","render","React","createElement","Box","sx","AppBar","bgcolor","padding","Toolbar","display","alignItems","justifyContent","renderLogo","map","mode","renderButton","_createClass","key","value","_this2","_get","_getPrototypeOf","prototype","this","setState","prev","Streamlit","setComponentValue","setFrameHeight","_this3","_this4","Icon","MuiIcons","icon","Button","color","onClick","handleClick","Typography","marginLeft","fontSize","fontFamily","src","alt","xs","md","fontWeight","letterSpacing","textDecoration","StreamlitComponentBase","withStreamlitConnection","ReactDOM","StrictMode","MyComponent","document","getElementById"],"mappings":"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","file":"static/js/main.f5fad66e.chunk.js","sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { ReactNode } from \"react\"\nimport {AppBar, Box, Button, Toolbar, Typography} from \"@mui/material\";\nimport * as MuiIcons from '@mui/icons-material'\n\ninterface State {\n  name: string\n}\n\ninterface Mode {\n  name: string\n  icon: string\n}\n\nclass StreamlitAppbar extends StreamlitComponentBase<State> {\n  public state = {name: \"\"}\n  private modes: Array<Mode> = this.props.args[\"modes\"]\n  private height: number = this.props.args[\"height\"]\n  private title: string = this.props.args[\"title\"]\n  private logo: string = this.props.args[\"logo\"]\n  private bgColor: string = this.props.args[\"bgColor\"]\n  private txtColor: string = this.props.args[\"txtColor\"]\n  private default: string = (this.props.args[\"default\"] !== \"\")? this.props.args[\"default\"] : this.modes[0].name\n\n  componentDidMount() {\n    super.componentDidMount();\n    this.setState((prev, state) => ({name: this.default,}), () => Streamlit.setComponentValue(this.state.name))\n    Streamlit.setFrameHeight(this.height)\n  }\n\n  public handleClick(mode: Mode) {\n    this.setState((prev, state) => ({name: mode.name,}), () => Streamlit.setComponentValue(this.state.name))\n  }\n\n  public renderButton(mode: Mode) {\n    const Icon = MuiIcons[mode.icon as keyof typeof MuiIcons]\n    return (\n      <Button\n        sx={{\n          color: this.txtColor,\n        }}\n        onClick={() => this.handleClick(mode)}\n      >\n        <Box\n          sx={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\"\n          }}\n        >\n          <Icon sx={{color: this.txtColor}}/>\n          <Typography\n            color={this.txtColor}\n            sx={{\n              marginLeft: 1,\n              fontSize: 16,\n              fontFamily: 'Arial',\n            }}\n          >\n            {mode.name}\n          </Typography>\n        </Box>\n      </Button>\n    )\n  }\n\n  public renderLogo(title: string, logo: string) {\n    if (logo !== \"\") {\n      return (\n        <Box\n          sx={{\n            display: \"flex\",\n            alignItems: \"center\"\n          }}\n        >\n          <img src={logo} alt={title} height={this.height*(0.5)}/>\n          <Typography\n            sx={{\n              marginLeft: 2,\n              display: { xs: 'none', md: 'flex' },\n              fontFamily: 'Arial',\n              fontWeight: 700,\n              letterSpacing: '.3rem',\n              color: \"#000000\",\n              textDecoration: 'none',\n              fontSize: 30,\n            }}\n          >\n            {title}\n          </Typography>\n        </Box>\n      )\n    } else {\n      if (title === \"\") {\n        return (\n          <Box\n            sx={{\n              display: \"flex\",\n              alignItems: \"center\"\n            }}\n          >\n            <Typography\n              sx={{\n                marginLeft: 2,\n                display: { xs: 'none', md: 'flex' },\n                fontFamily: 'Arial',\n                fontWeight: 700,\n                letterSpacing: '.3rem',\n                color: \"#000000\",\n                textDecoration: 'none',\n                fontSize: 30,\n              }}\n            >\n              {title}\n            </Typography>\n          </Box>\n        )\n      }\n    }\n  }\n\n  public render = (): ReactNode => {\n    return (\n      <Box\n        sx={{\n          height: this.height,\n        }}\n      >\n        <AppBar\n          sx={{\n            bgcolor: this.bgColor,\n            padding: 1,\n          }}\n        >\n          <Toolbar\n            sx={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"space-between\"\n            }}\n          >\n            {this.renderLogo(this.title, this.logo)}\n            <Box>\n              {this.modes.map((mode: Mode) => this.renderButton(mode))}\n            </Box>\n          </Toolbar>\n        </AppBar>\n      </Box>\n    )\n  }\n}\n\nexport default withStreamlitConnection(StreamlitAppbar)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport MyComponent from \"./StreamlitAppbar\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <MyComponent />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}