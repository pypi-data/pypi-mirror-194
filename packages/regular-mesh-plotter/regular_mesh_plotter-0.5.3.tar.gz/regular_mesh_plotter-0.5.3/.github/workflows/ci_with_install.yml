# This CI will lauch a Docker image that contains all the dependencies required
# within that image the pytest test suite is run 

name: CI with install

on:
  pull_request:
    branches:
      - develop
      - main
    paths-ignore:
      - 'docs/**'
      - '.gitignore'
      - '*.md'
      - 'CITATION.cff'
      - 'LICENSE.txt'
      - 'readthedocs.yml'

jobs:
  testing:
    runs-on: ubuntu-latest
    container:
      # image: continuumio/miniconda3:4.10.3
      image: ghcr.io/openmc-data-storage/miniconda3_4.9.2_endfb-7.1_nndc_tendl_2019
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: install dependancies
        run: |
          conda install -c conda-forge mamba
          mamba install -c conda-forge openmc

      - name: install package
        run: |
          pip install --upgrade pip
          pip install .
          python -c "import regular_mesh_plotter"

      - name: install packages for tests
        run: |
          pip install .[tests]

      - name: Run test_utils
        run: |
          pytest tests/ -v --cov=regular_mesh_plotter --cov-append --cov-report term --cov-report xml

      - name: Upload to codecov
        uses: codecov/codecov-action@v2

      - name: Run examples
        run: |
          cd examples
          python create_statepoint_file_with_meshes_openmc_dagmc.py
          python create_statepoint_file_with_meshes_openmc.py
          # python examples_from_readme.py  # commented out as it requires entire neutronics workflow
          python plot_regular_mesh_dose_tally.py
          python plot_regular_mesh_dose_tally_with_geometry.py
          python plot_regular_mesh_tally.py
          python plot_regular_mesh_tally_with_geometry.py
          python plot_regular_mesh_values.py
          python plot_regular_mesh_values_with_geometry.py
