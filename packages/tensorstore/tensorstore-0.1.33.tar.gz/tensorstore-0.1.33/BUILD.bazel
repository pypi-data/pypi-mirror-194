load("@bazel_tools//tools/python:toolchain.bzl", "py_runtime_pair")
load("@bazel_skylib//lib:selects.bzl", "selects")

package(default_visibility = ["//visibility:public"])

exports_files(glob(["*"]))

# Config settings. Aliases can be imported into a BUILD file via a list
# comprehension like:
#
#[
#    alias(
#        name = name,
#        actual = "@com_google_tensorstore//:{target}".format(target = name),
#    )
#    for name in [
#        "linux_x86_64_clang",
#        "linux_arm64_clang",
#        "linux_x86_64_gcc",
#        "linux_arm64_gcc",
#        "macos_x86_64",
#        "macos_arm64",
#        "windows_x86_64_msvc",
#        "compiler_msvc",
#        "compiler_clang",
#        "compiler_gcc",
#        "arm64",
#        "x86_64",
#    ]
#]

# Combined settings:
#
# :linux_x86_64_clang
# :linux_arm64_clang
# :linux_x86_64_gcc
# :linux_arm64_gcc
# :macos_x86_64
# :macos_arm64
# :windows_x86_64_msvc

selects.config_setting_group(
    name = "linux_arm64_clang",
    match_all = [
        ":compiler_clang",
        ":linux",
        ":arm64",
    ],
)

selects.config_setting_group(
    name = "linux_x86_64_clang",
    match_all = [
        ":compiler_clang",
        ":linux",
        ":x86_64",
    ],
)

selects.config_setting_group(
    name = "linux_arm64_gcc",
    match_all = [
        ":compiler_gcc",
        ":linux",
        ":arm64",
    ],
)

selects.config_setting_group(
    name = "linux_x86_64_gcc",
    match_all = [
        ":compiler_gcc",
        ":linux",
        ":x86_64",
    ],
)

selects.config_setting_group(
    name = "macos_x86_64",
    match_all = [
        ":macos",
        ":x86_64",
    ],
)

selects.config_setting_group(
    name = "macos_arm64",
    match_all = [
        ":macos",
        ":arm64",
    ],
)

selects.config_setting_group(
    name = "windows_x86_64_msvc",
    match_all = [
        ":compiler_msvc",
        ":windows",
        ":x86_64",
    ],
)

# compiler selection
#
# :compiler_msvc
# :compiler_clang
# :compiler_gcc
#
config_setting(
    name = "compiler_msvc",
    flag_values = {
        "@bazel_tools//tools/cpp:compiler": "msvc-cl",
    },
)

config_setting(
    name = "compiler_clang",
    flag_values = {
        "@bazel_tools//tools/cpp:compiler": "clang",
    },
)

config_setting(
    name = "compiler_gcc",
    flag_values = {
        "@bazel_tools//tools/cpp:compiler": "compiler",
    },
)

# Cpu settings
#
# :arm64
# :x86_64
config_setting(
    name = "x86_64",
    constraint_values = ["@platforms//cpu:x86_64"],
)

config_setting(
    name = "arm64",
    constraint_values = ["@platforms//cpu:arm64"],
)

# Os settings
#
# :linux
# :macos
# :windows
config_setting(
    name = "linux",
    constraint_values = ["@platforms//os:linux"],
)

config_setting(
    name = "macos",
    constraint_values = ["@platforms//os:macos"],
)

config_setting(
    name = "windows",
    constraint_values = ["@platforms//os:windows"],
)
