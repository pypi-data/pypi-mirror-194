{
    "description": "<div class=\"document\" id=\"traited-class-tvb-simulator-models-wong-wang-exc-inh-decobalancedexcinh\">\n<h1 class=\"title\">Traited class [tvb.simulator.models.wong_wang_exc_inh.DecoBalancedExcInh]</h1>\n<blockquote>\n<table class=\"docutils citation\" frame=\"void\" id=\"deco-2021\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[Deco_2021]</td><td>Deco, Gustavo, Morten L. Kringelbach, Aurina Arnatkeviciute,</td></tr>\n</tbody>\n</table>\n<p>Stuart Oldham, Kristina Sabaroedin, Nigel C. Rogasch, Kevin M. Aquino, and\nAlex Fornito. &quot;Dynamical consequences of regional heterogeneity in the\nbrain\u2019s transcriptional landscape.&quot; Science Advances 7, no. 29 (2021):\neabf4752.</p>\n<p>Equations extend the [DPA_2013] with effective gain parameter M_i to</p>\n<div class=\"formula\">\n<span class=\"environment align\"><span class=\"arrayrow\">\n<span class=\"arraycell align-r\">\n<i>x</i><sub><i>ek</i></sub>\n</span>\n<span class=\"arraycell align-l\">\n\u2009=\u2009<i>w</i><sub><i>p</i></sub>\u2006<i>J</i><sub><i>N</i></sub>\u2006<i>S</i><sub><i>ek</i></sub>\u2009\u2212\u2009<i>J</i><span class=\"scripts\"><sub class=\"script\"><i>ik</i></sub><sub class=\"script\"><i>iS</i></sub></span>\u2009+\u2009<i>W</i><span class=\"scripts\"><sub class=\"script\"><i>o</i></sub><sub class=\"script\"><i>eI</i></sub></span>\u2009+\u2009<i>GJ</i><sub><i>N</i></sub><b>\u0393</b>(<i>S</i><sub><i>ek</i></sub>,\u2009<i>S</i><sub><i>ej</i></sub>,\u2009<i>u</i><sub><i>kj</i></sub>)\n</span>\n\n</span>\n<span class=\"arrayrow\">\n<span class=\"arraycell align-r\">\n\u2005\n</span>\n<span class=\"arraycell align-l\">\n\u2005\n</span>\n\n</span>\n<span class=\"arrayrow\">\n<span class=\"arraycell align-r\">\n<i>H</i>(<i>x</i><sub><i>ek</i></sub>)\n</span>\n<span class=\"arraycell align-l\">\n\u2009=\u2009<span class=\"fullfraction\"><span class=\"ignored\">(</span><span class=\"numerator\"><i>M</i><sub><i>i</i></sub>(<i>a</i><span class=\"scripts\"><sub class=\"script\"><i>ek</i></sub><sub class=\"script\"><i>ex</i></sub></span>\u2009\u2212\u2009<i>b</i><sub><i>e</i></sub>)</span><span class=\"ignored\">)/(</span><span class=\"denominator\">1\u2009\u2212\u2009exp(\u2009\u2212\u2009<i>d</i><sub><i>e</i></sub><i>M</i><sub><i>i</i></sub>(<i>a</i><span class=\"scripts\"><sub class=\"script\"><i>ek</i></sub><sub class=\"script\"><i>ex</i></sub></span>\u2009\u2212\u2009<i>b</i><sub><i>e</i></sub>))</span><span class=\"ignored\">)</span></span>\n</span>\n\n</span>\n<span class=\"arrayrow\">\n<span class=\"arraycell align-r\">\n\u2005\n</span>\n<span class=\"arraycell align-l\">\n\u2005\n</span>\n\n</span>\n<span class=\"arrayrow\">\n<span class=\"arraycell align-r\">\n<i>\u1e60</i><sub><i>ek</i></sub>\n</span>\n<span class=\"arraycell align-l\">\n\u2009=\u2009\u2009\u2212\u2009<span class=\"fullfraction\"><span class=\"ignored\">(</span><span class=\"numerator\"><i>S</i><sub><i>ek</i></sub></span><span class=\"ignored\">)/(</span><span class=\"denominator\"><i>\u03c4</i><sub><i>e</i></sub></span><span class=\"ignored\">)</span></span>\u2009+\u2009(1\u2009\u2212\u2009<i>S</i><sub><i>ek</i></sub>)\u2006<i>\u03b3</i><i>H</i>(<i>x</i><sub><i>ek</i></sub>)\n</span>\n\n</span>\n<span class=\"arrayrow\">\n<span class=\"arraycell align-r\">\n\u2005\n</span>\n<span class=\"arraycell align-l\">\n\u2005\n</span>\n\n</span>\n<span class=\"arrayrow\">\n<span class=\"arraycell align-r\">\n\n</span>\n\n</span>\n</span>\n</div>\n<div class=\"formula\">\n<span class=\"environment align\"><span class=\"arrayrow\">\n<span class=\"arraycell align-r\">\n<i>x</i><sub><i>ik</i></sub>\n</span>\n<span class=\"arraycell align-l\">\n\u2009=\u2009<i>J</i><sub><i>N</i></sub>\u2006<i>S</i><sub><i>ek</i></sub>\u2009\u2212\u2009<i>S</i><sub><i>ik</i></sub>\u2009+\u2009<i>W</i><span class=\"scripts\"><sub class=\"script\"><i>o</i></sub><sub class=\"script\"><i>iI</i></sub></span>\u2009+\u2009<i>\u03bb</i><i>GJ</i><sub><i>N</i></sub><b>\u0393</b>(<i>S</i><sub><i>ik</i></sub>,\u2009<i>S</i><sub><i>ej</i></sub>,\u2009<i>u</i><sub><i>kj</i></sub>)\n</span>\n\n</span>\n<span class=\"arrayrow\">\n<span class=\"arraycell align-r\">\n\u2005\n</span>\n<span class=\"arraycell align-l\">\n\u2005\n</span>\n\n</span>\n<span class=\"arrayrow\">\n<span class=\"arraycell align-r\">\n<i>H</i>(<i>x</i><sub><i>ik</i></sub>)\n</span>\n<span class=\"arraycell align-l\">\n\u2009=\u2009<span class=\"fullfraction\"><span class=\"ignored\">(</span><span class=\"numerator\"><i>M</i><sub><i>i</i></sub>(<i>a</i><span class=\"scripts\"><sub class=\"script\"><i>ik</i></sub><sub class=\"script\"><i>ix</i></sub></span>\u2009\u2212\u2009<i>b</i><sub><i>i</i></sub>)</span><span class=\"ignored\">)/(</span><span class=\"denominator\">1\u2009\u2212\u2009exp(\u2009\u2212\u2009<i>d</i><sub><i>i</i></sub><i>M</i><sub><i>i</i></sub>(<i>a</i><span class=\"scripts\"><sub class=\"script\"><i>ik</i></sub><sub class=\"script\"><i>ix</i></sub></span>\u2009\u2212\u2009<i>b</i><sub><i>i</i></sub>))</span><span class=\"ignored\">)</span></span>\n</span>\n\n</span>\n<span class=\"arrayrow\">\n<span class=\"arraycell align-r\">\n\u2005\n</span>\n<span class=\"arraycell align-l\">\n\u2005\n</span>\n\n</span>\n<span class=\"arrayrow\">\n<span class=\"arraycell align-r\">\n<i>\u1e60</i><sub><i>ik</i></sub>\n</span>\n<span class=\"arraycell align-l\">\n\u2009=\u2009\u2009\u2212\u2009<span class=\"fullfraction\"><span class=\"ignored\">(</span><span class=\"numerator\"><i>S</i><sub><i>ik</i></sub></span><span class=\"ignored\">)/(</span><span class=\"denominator\"><i>\u03c4</i><sub><i>i</i></sub></span><span class=\"ignored\">)</span></span>\u2009+\u2009<i>\u03b3</i><sub><i>iH</i></sub>(<i>x</i><sub><i>ik</i></sub>) \n</span>\n\n</span>\n</span>\n</div>\n</blockquote>\n<div class=\"section\" id=\"attributes-declared\">\n<h1>Attributes declared</h1>\n<dl class=\"docutils\">\n<dt>M_i <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.wong_wang_exc_inh.DecoBalancedExcInh.M_i = NArray(label='<span class=\"formula\"><i>ratio</i></span>', dtype=float64, default=array([1.]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Effective gain within a region.</dd>\n<dt>a_e <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.wong_wang_exc_inh.ReducedWongWangExcInh.a_e = NArray(label='<span class=\"formula\"><i>a</i><sub><i>e</i></sub></span>', dtype=float64, default=array([310.]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>[n/C]. Excitatory population input gain parameter, chosen to fit numerical solutions.</dd>\n<dt>b_e <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.wong_wang_exc_inh.ReducedWongWangExcInh.b_e = NArray(label='<span class=\"formula\"><i>b</i><sub><i>e</i></sub></span>', dtype=float64, default=array([125.]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>[Hz]. Excitatory population input shift parameter chosen to fit numerical solutions.</dd>\n<dt>d_e <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.wong_wang_exc_inh.ReducedWongWangExcInh.d_e = NArray(label='<span class=\"formula\"><i>d</i><sub><i>e</i></sub></span>', dtype=float64, default=array([0.16]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>[s]. Excitatory population input scaling parameter chosen to fit numerical solutions.</dd>\n<dt>gamma_e <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.wong_wang_exc_inh.ReducedWongWangExcInh.gamma_e = NArray(label='<span class=\"formula\"><br/><i>gamma</i><sub><i>e</i></sub></span>', dtype=float64, default=array([0.000641]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Excitatory population kinetic parameter</dd>\n<dt>tau_e <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.wong_wang_exc_inh.ReducedWongWangExcInh.tau_e = NArray(label='<span class=\"formula\"><br/><i>tau</i><sub><i>e</i></sub></span>', dtype=float64, default=array([100.]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>[ms]. Excitatory population NMDA decay time constant.</dd>\n<dt>w_p <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.wong_wang_exc_inh.ReducedWongWangExcInh.w_p = NArray(label='<span class=\"formula\"><i>w</i><sub><i>p</i></sub></span>', dtype=float64, default=array([1.4]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Excitatory population recurrence weight</dd>\n<dt>J_N <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.wong_wang_exc_inh.ReducedWongWangExcInh.J_N = NArray(label='<span class=\"formula\"><i>J</i><sub><i>N</i></sub></span>', dtype=float64, default=array([0.15]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>[nA] NMDA current</dd>\n<dt>W_e <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.wong_wang_exc_inh.ReducedWongWangExcInh.W_e = NArray(label='<span class=\"formula\"><i>W</i><sub><i>e</i></sub></span>', dtype=float64, default=array([1.]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Excitatory population external input scaling weight</dd>\n<dt>a_i <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.wong_wang_exc_inh.ReducedWongWangExcInh.a_i = NArray(label='<span class=\"formula\"><i>a</i><sub><i>i</i></sub></span>', dtype=float64, default=array([615.]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>[n/C]. Inhibitory population input gain parameter, chosen to fit numerical solutions.</dd>\n<dt>b_i <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.wong_wang_exc_inh.ReducedWongWangExcInh.b_i = NArray(label='<span class=\"formula\"><i>b</i><sub><i>i</i></sub></span>', dtype=float64, default=array([177.]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>[Hz]. Inhibitory population input shift parameter chosen to fit numerical solutions.</dd>\n<dt>d_i <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.wong_wang_exc_inh.ReducedWongWangExcInh.d_i = NArray(label='<span class=\"formula\"><i>d</i><sub><i>i</i></sub></span>', dtype=float64, default=array([0.087]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>[s]. Inhibitory population input scaling parameter chosen to fit numerical solutions.</dd>\n<dt>gamma_i <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.wong_wang_exc_inh.ReducedWongWangExcInh.gamma_i = NArray(label='<span class=\"formula\"><br/><i>gamma</i><sub><i>i</i></sub></span>', dtype=float64, default=array([0.001]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Inhibitory population kinetic parameter</dd>\n<dt>tau_i <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.wong_wang_exc_inh.ReducedWongWangExcInh.tau_i = NArray(label='<span class=\"formula\"><br/><i>tau</i><sub><i>i</i></sub></span>', dtype=float64, default=array([10.]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>[ms]. Inhibitory population NMDA decay time constant.</dd>\n<dt>J_i <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.wong_wang_exc_inh.ReducedWongWangExcInh.J_i = NArray(label='<span class=\"formula\"><i>J</i><sub><i>i</i></sub></span>', dtype=float64, default=array([1.]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>[nA] Local inhibitory current</dd>\n<dt>W_i <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.wong_wang_exc_inh.ReducedWongWangExcInh.W_i = NArray(label='<span class=\"formula\"><i>W</i><sub><i>i</i></sub></span>', dtype=float64, default=array([0.7]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Inhibitory population external input scaling weight</dd>\n<dt>I_o <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.wong_wang_exc_inh.ReducedWongWangExcInh.I_o = NArray(label='<span class=\"formula\"><i>I</i><sub><i>o</i></sub></span>', dtype=float64, default=array([0.382]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>[nA]. Effective external input</dd>\n<dt>I_ext <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.wong_wang_exc_inh.ReducedWongWangExcInh.I_ext = NArray(label='<span class=\"formula\"><i>I</i><sub><i>ext</i></sub></span>', dtype=float64, default=array([0.]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>[nA]. Effective external stimulus input</dd>\n<dt>G <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.wong_wang_exc_inh.ReducedWongWangExcInh.G = NArray(label='<span class=\"formula\"><i>G</i></span>', dtype=float64, default=array([2.]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Global coupling scaling</dd>\n<dt>lamda <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.wong_wang_exc_inh.ReducedWongWangExcInh.lamda = NArray(label='<span class=\"formula\"><br/><i>lambda</i></span>', dtype=float64, default=array([0.]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Inhibitory global coupling scaling</dd>\n<dt>state_variable_range <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.wong_wang_exc_inh.ReducedWongWangExcInh.state_variable_range = Final(field_type=&lt;class 'dict'&gt;, default={'S_e': array([0., 1.]), 'S_i': array([0., 1.])}, required=True)</span></dt>\n<dd>Population firing rate</dd>\n<dt>state_variable_boundaries <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.wong_wang_exc_inh.ReducedWongWangExcInh.state_variable_boundaries = Final(field_type=&lt;class 'dict'&gt;, default={'S_e': array([0., 1.]), 'S_i': array([0., 1.])}, required=True)</span></dt>\n<dd>The values for each state-variable should be set to encompass\nthe boundaries of the dynamic range of that state-variable. Set None for one-sided boundaries</dd>\n<dt>variables_of_interest <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.wong_wang_exc_inh.ReducedWongWangExcInh.variables_of_interest = List(of=&lt;class 'str'&gt;, default=('S_e', 'S_i'), required=True)</span></dt>\n<dd>default state variables to be monitored</dd>\n</dl>\n<p>gid : tvb.basic.neotraits._core.HasTraits.gid = Attr(field_type=&lt;class 'uuid.UUID'&gt;, default=None, required=True)</p>\n</div>\n</div>\n",
    "arguments": {
        "M_i": "<div class=\"document\">\n<p>Effective gain within a region.</p>\n</div>\n",
        "a_e": "<div class=\"document\">\n<p>[n/C]. Excitatory population input gain parameter, chosen to fit numerical solutions.</p>\n</div>\n",
        "b_e": "<div class=\"document\">\n<p>[Hz]. Excitatory population input shift parameter chosen to fit numerical solutions.</p>\n</div>\n",
        "d_e": "<div class=\"document\">\n<p>[s]. Excitatory population input scaling parameter chosen to fit numerical solutions.</p>\n</div>\n",
        "gamma_e": "<div class=\"document\">\n<p>Excitatory population kinetic parameter</p>\n</div>\n",
        "tau_e": "<div class=\"document\">\n<p>[ms]. Excitatory population NMDA decay time constant.</p>\n</div>\n",
        "w_p": "<div class=\"document\">\n<p>Excitatory population recurrence weight</p>\n</div>\n",
        "J_N": "<div class=\"document\">\n<p>[nA] NMDA current</p>\n</div>\n",
        "W_e": "<div class=\"document\">\n<p>Excitatory population external input scaling weight</p>\n</div>\n",
        "a_i": "<div class=\"document\">\n<p>[n/C]. Inhibitory population input gain parameter, chosen to fit numerical solutions.</p>\n</div>\n",
        "b_i": "<div class=\"document\">\n<p>[Hz]. Inhibitory population input shift parameter chosen to fit numerical solutions.</p>\n</div>\n",
        "d_i": "<div class=\"document\">\n<p>[s]. Inhibitory population input scaling parameter chosen to fit numerical solutions.</p>\n</div>\n",
        "gamma_i": "<div class=\"document\">\n<p>Inhibitory population kinetic parameter</p>\n</div>\n",
        "tau_i": "<div class=\"document\">\n<p>[ms]. Inhibitory population NMDA decay time constant.</p>\n</div>\n",
        "J_i": "<div class=\"document\">\n<p>[nA] Local inhibitory current</p>\n</div>\n",
        "W_i": "<div class=\"document\">\n<p>Inhibitory population external input scaling weight</p>\n</div>\n",
        "I_o": "<div class=\"document\">\n<p>[nA]. Effective external input</p>\n</div>\n",
        "I_ext": "<div class=\"document\">\n<p>[nA]. Effective external stimulus input</p>\n</div>\n",
        "G": "<div class=\"document\">\n<p>Global coupling scaling</p>\n</div>\n",
        "lamda": "<div class=\"document\">\n<p>Inhibitory global coupling scaling</p>\n</div>\n",
        "state_variable_range": "<div class=\"document\">\n<p>Population firing rate</p>\n</div>\n",
        "state_variable_boundaries": "<div class=\"document\">\n<dl class=\"docutils\">\n<dt>The values for each state-variable should be set to encompass</dt>\n<dd>the boundaries of the dynamic range of that state-variable. Set None for one-sided boundaries</dd>\n</dl>\n</div>\n",
        "variables_of_interest": "<div class=\"document\">\n<p>default state variables to be monitored</p>\n</div>\n"
    }
}