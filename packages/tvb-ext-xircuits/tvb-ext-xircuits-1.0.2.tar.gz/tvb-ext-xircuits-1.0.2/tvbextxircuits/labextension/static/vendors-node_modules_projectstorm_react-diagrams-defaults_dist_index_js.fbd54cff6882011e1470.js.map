{"version":3,"file":"vendors-node_modules_projectstorm_react-diagrams-defaults_dist_index_js.fbd54cff6882011e1470.js","mappings":"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C1C;AACA;AACA;AACA;AACA;AACA,CAAC,cAAc;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,QAAQ;AACxB;AACA,4CAA4C,sKAAsK;AAClN,8CAA8C;AAC9C,oCAAoC,iBAAiB;AACrD,iBAAiB;AACjB,oCAAoC,gBAAgB;AACpD,iBAAiB,+IAA+I;AAChK;AACA;AACA,8BAA8B;AAC9B;;;;;;;;;;AC9Ba;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,gCAAgC;AAChC,cAAc,mBAAO,CAAC,oDAAO;AAC7B;AACA;AACA;AACA;AACA,SAAS;AACT,6EAA6E;AAC7E;AACA,aAAa;AACb;AACA,eAAe,wBAAwB;AACvC;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA,gCAAgC;AAChC;;;;;;;;;;ACzBa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,yBAAyB;AACzB,cAAc,mBAAO,CAAC,oDAAO;AAC7B,8BAA8B,mBAAO,CAAC,yGAAmC;AACzE,iCAAiC,mBAAO,CAAC,0HAA0B;AACnE,mCAAmC,mBAAO,CAAC,8HAA4B;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA,uFAAuF,wIAAwI;AAC/N;AACA;AACA;AACA;AACA,2FAA2F,aAAa,GAAG;AAC3G,gCAAgC,oBAAoB;AACpD,aAAa,sBAAsB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,gCAAgC,uBAAuB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,iEAAiE;AAC3G;AACA;AACA,yBAAyB;AACzB;;;;;;;;;;AC1Ga;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,0BAA0B;AAC1B,cAAc,mBAAO,CAAC,oDAAO;AAC7B,2BAA2B,mBAAO,CAAC,8GAAoB;AACvD,4BAA4B,mBAAO,CAAC,gHAAqB;AACzD,4BAA4B,mBAAO,CAAC,6IAAiC;AACrE;AACA;AACA;AACA;AACA;AACA,4EAA4E,wCAAwC;AACpH;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;;;;;;;;;;ACnBa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,wBAAwB;AACxB,UAAU,mBAAO,CAAC,+CAAQ;AAC1B,8BAA8B,mBAAO,CAAC,yGAAmC;AACzE,2BAA2B,mBAAO,CAAC,oHAA0B;AAC7D;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4DAA4D;AAC1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,6CAA6C,wBAAwB;AACrE;AACA,aAAa;AACb;AACA,aAAa,GAAG;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;;;;;;;;;;AChGa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,yBAAyB;AACzB,cAAc,mBAAO,CAAC,oDAAO;AAC7B,UAAU,mBAAO,CAAC,+CAAQ;AAC1B,iCAAiC,mBAAO,CAAC,gIAAgC;AACzE,iBAAiB,mBAAO,CAAC,6FAAiB;AAC1C;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC,cAAc;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF,0DAA0D;AAC9I;AACA;AACA;AACA,8CAA8C,qJAAqJ;AACnM;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;;;;;;;;;;ACpEa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,0BAA0B;AAC1B,2BAA2B,mBAAO,CAAC,8GAAoB;AACvD,4BAA4B,mBAAO,CAAC,6IAAiC;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,0BAA0B;AAC1B;;;;;;;;;;AChBa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,wBAAwB;AACxB,cAAc,mBAAO,CAAC,oDAAO;AAC7B,8BAA8B,mBAAO,CAAC,yGAAmC;AACzE,iBAAiB,mBAAO,CAAC,6FAAiB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC,cAAc;AACf;AACA;AACA,8EAA8E,kDAAkD;AAChI;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;;;;;;;;;;ACtCa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,wBAAwB;AACxB,8BAA8B,mBAAO,CAAC,yGAAmC;AACzE,2BAA2B,mBAAO,CAAC,oHAA0B;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,+KAA+K;AAC7M;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,wBAAwB,gDAAgD;AACrH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA,wBAAwB;AACxB","sources":["webpack://tvb-ext-xircuits/./node_modules/@projectstorm/react-diagrams-defaults/dist/index.js","webpack://tvb-ext-xircuits/./node_modules/@projectstorm/react-diagrams-defaults/dist/label/DefaultLabelFactory.js","webpack://tvb-ext-xircuits/./node_modules/@projectstorm/react-diagrams-defaults/dist/label/DefaultLabelModel.js","webpack://tvb-ext-xircuits/./node_modules/@projectstorm/react-diagrams-defaults/dist/label/DefaultLabelWidget.js","webpack://tvb-ext-xircuits/./node_modules/@projectstorm/react-diagrams-defaults/dist/link/DefaultLinkFactory.js","webpack://tvb-ext-xircuits/./node_modules/@projectstorm/react-diagrams-defaults/dist/link/DefaultLinkModel.js","webpack://tvb-ext-xircuits/./node_modules/@projectstorm/react-diagrams-defaults/dist/link/DefaultLinkPointWidget.js","webpack://tvb-ext-xircuits/./node_modules/@projectstorm/react-diagrams-defaults/dist/link/DefaultLinkSegmentWidget.js","webpack://tvb-ext-xircuits/./node_modules/@projectstorm/react-diagrams-defaults/dist/link/DefaultLinkWidget.js","webpack://tvb-ext-xircuits/./node_modules/@projectstorm/react-diagrams-defaults/dist/node/DefaultNodeFactory.js","webpack://tvb-ext-xircuits/./node_modules/@projectstorm/react-diagrams-defaults/dist/node/DefaultNodeModel.js","webpack://tvb-ext-xircuits/./node_modules/@projectstorm/react-diagrams-defaults/dist/node/DefaultNodeWidget.js","webpack://tvb-ext-xircuits/./node_modules/@projectstorm/react-diagrams-defaults/dist/port/DefaultPortFactory.js","webpack://tvb-ext-xircuits/./node_modules/@projectstorm/react-diagrams-defaults/dist/port/DefaultPortLabelWidget.js","webpack://tvb-ext-xircuits/./node_modules/@projectstorm/react-diagrams-defaults/dist/port/DefaultPortModel.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./label/DefaultLabelFactory\"), exports);\n__exportStar(require(\"./label/DefaultLabelModel\"), exports);\n__exportStar(require(\"./label/DefaultLabelWidget\"), exports);\n__exportStar(require(\"./link/DefaultLinkFactory\"), exports);\n__exportStar(require(\"./link/DefaultLinkModel\"), exports);\n__exportStar(require(\"./link/DefaultLinkWidget\"), exports);\n__exportStar(require(\"./link/DefaultLinkSegmentWidget\"), exports);\n__exportStar(require(\"./link/DefaultLinkPointWidget\"), exports);\n__exportStar(require(\"./node/DefaultNodeFactory\"), exports);\n__exportStar(require(\"./node/DefaultNodeModel\"), exports);\n__exportStar(require(\"./node/DefaultNodeWidget\"), exports);\n__exportStar(require(\"./port/DefaultPortFactory\"), exports);\n__exportStar(require(\"./port/DefaultPortLabelWidget\"), exports);\n__exportStar(require(\"./port/DefaultPortModel\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultLabelFactory = void 0;\nconst React = require(\"react\");\nconst DefaultLabelModel_1 = require(\"./DefaultLabelModel\");\nconst DefaultLabelWidget_1 = require(\"./DefaultLabelWidget\");\nconst react_canvas_core_1 = require(\"@projectstorm/react-canvas-core\");\n/**\n * @author Dylan Vorster\n */\nclass DefaultLabelFactory extends react_canvas_core_1.AbstractReactFactory {\n    constructor() {\n        super('default');\n    }\n    generateReactWidget(event) {\n        return React.createElement(DefaultLabelWidget_1.DefaultLabelWidget, { model: event.model });\n    }\n    generateModel(event) {\n        return new DefaultLabelModel_1.DefaultLabelModel();\n    }\n}\nexports.DefaultLabelFactory = DefaultLabelFactory;\n//# sourceMappingURL=DefaultLabelFactory.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultLabelModel = void 0;\nconst react_diagrams_core_1 = require(\"@projectstorm/react-diagrams-core\");\nclass DefaultLabelModel extends react_diagrams_core_1.LabelModel {\n    constructor(options = {}) {\n        super(Object.assign({ offsetY: options.offsetY == null ? -23 : options.offsetY, type: 'default' }, options));\n    }\n    setLabel(label) {\n        this.options.label = label;\n    }\n    deserialize(event) {\n        super.deserialize(event);\n        this.options.label = event.data.label;\n    }\n    serialize() {\n        return Object.assign(Object.assign({}, super.serialize()), { label: this.options.label });\n    }\n}\nexports.DefaultLabelModel = DefaultLabelModel;\n//# sourceMappingURL=DefaultLabelModel.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultLabelWidget = void 0;\nconst React = require(\"react\");\nconst styled_1 = require(\"@emotion/styled\");\nvar S;\n(function (S) {\n    S.Label = styled_1.default.div `\n\t\tbackground: rgba(0, 0, 0, 0.8);\n\t\tborder-radius: 5px;\n\t\tcolor: white;\n\t\tfont-size: 12px;\n\t\tpadding: 4px 8px;\n\t\tfont-family: sans-serif;\n\t\tuser-select: none;\n\t`;\n})(S || (S = {}));\nclass DefaultLabelWidget extends React.Component {\n    render() {\n        return React.createElement(S.Label, null, this.props.model.getOptions().label);\n    }\n}\nexports.DefaultLabelWidget = DefaultLabelWidget;\n//# sourceMappingURL=DefaultLabelWidget.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultLinkFactory = void 0;\nconst React = require(\"react\");\nconst DefaultLinkModel_1 = require(\"./DefaultLinkModel\");\nconst DefaultLinkWidget_1 = require(\"./DefaultLinkWidget\");\nconst styled_1 = require(\"@emotion/styled\");\nconst react_canvas_core_1 = require(\"@projectstorm/react-canvas-core\");\nconst react_1 = require(\"@emotion/react\");\nvar S;\n(function (S) {\n    S.Keyframes = react_1.keyframes `\n\t\tfrom {\n\t\t\tstroke-dashoffset: 24;\n\t\t}\n\t\tto {\n\t\t\tstroke-dashoffset: 0;\n\t\t}\n\t`;\n    const selected = react_1.css `\n\t\tstroke-dasharray: 10, 2;\n\t\tanimation: ${S.Keyframes} 1s linear infinite;\n\t`;\n    S.Path = styled_1.default.path `\n\t\t${(p) => p.selected && selected};\n\t\tfill: none;\n\t\tpointer-events: auto;\n\t`;\n})(S || (S = {}));\nclass DefaultLinkFactory extends react_canvas_core_1.AbstractReactFactory {\n    constructor(type = 'default') {\n        super(type);\n    }\n    generateReactWidget(event) {\n        return React.createElement(DefaultLinkWidget_1.DefaultLinkWidget, { link: event.model, diagramEngine: this.engine });\n    }\n    generateModel(event) {\n        return new DefaultLinkModel_1.DefaultLinkModel();\n    }\n    generateLinkSegment(model, selected, path) {\n        return (React.createElement(S.Path, { selected: selected, stroke: selected ? model.getOptions().selectedColor : model.getOptions().color, strokeWidth: model.getOptions().width, d: path }));\n    }\n}\nexports.DefaultLinkFactory = DefaultLinkFactory;\n//# sourceMappingURL=DefaultLinkFactory.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultLinkModel = void 0;\nconst react_diagrams_core_1 = require(\"@projectstorm/react-diagrams-core\");\nconst DefaultLabelModel_1 = require(\"../label/DefaultLabelModel\");\nconst geometry_1 = require(\"@projectstorm/geometry\");\nclass DefaultLinkModel extends react_diagrams_core_1.LinkModel {\n    constructor(options = {}) {\n        super(Object.assign({ type: 'default', width: options.width || 3, color: options.color || 'gray', selectedColor: options.selectedColor || 'rgb(0,192,255)', curvyness: 50 }, options));\n    }\n    calculateControlOffset(port) {\n        if (port.getOptions().alignment === react_diagrams_core_1.PortModelAlignment.RIGHT) {\n            return [this.options.curvyness, 0];\n        }\n        else if (port.getOptions().alignment === react_diagrams_core_1.PortModelAlignment.LEFT) {\n            return [-this.options.curvyness, 0];\n        }\n        else if (port.getOptions().alignment === react_diagrams_core_1.PortModelAlignment.TOP) {\n            return [0, -this.options.curvyness];\n        }\n        return [0, this.options.curvyness];\n    }\n    getSVGPath() {\n        if (this.points.length == 2) {\n            const curve = new geometry_1.BezierCurve();\n            curve.setSource(this.getFirstPoint().getPosition());\n            curve.setTarget(this.getLastPoint().getPosition());\n            curve.setSourceControl(this.getFirstPoint().getPosition().clone());\n            curve.setTargetControl(this.getLastPoint().getPosition().clone());\n            if (this.sourcePort) {\n                curve.getSourceControl().translate(...this.calculateControlOffset(this.getSourcePort()));\n            }\n            if (this.targetPort) {\n                curve.getTargetControl().translate(...this.calculateControlOffset(this.getTargetPort()));\n            }\n            return curve.getSVGCurve();\n        }\n    }\n    serialize() {\n        return Object.assign(Object.assign({}, super.serialize()), { width: this.options.width, color: this.options.color, curvyness: this.options.curvyness, selectedColor: this.options.selectedColor });\n    }\n    deserialize(event) {\n        super.deserialize(event);\n        this.options.color = event.data.color;\n        this.options.width = event.data.width;\n        this.options.curvyness = event.data.curvyness;\n        this.options.selectedColor = event.data.selectedColor;\n    }\n    addLabel(label) {\n        if (label instanceof react_diagrams_core_1.LabelModel) {\n            return super.addLabel(label);\n        }\n        let labelOb = new DefaultLabelModel_1.DefaultLabelModel();\n        labelOb.setLabel(label);\n        return super.addLabel(labelOb);\n    }\n    setWidth(width) {\n        this.options.width = width;\n        this.fireEvent({ width }, 'widthChanged');\n    }\n    setColor(color) {\n        this.options.color = color;\n        this.fireEvent({ color }, 'colorChanged');\n    }\n}\nexports.DefaultLinkModel = DefaultLinkModel;\n//# sourceMappingURL=DefaultLinkModel.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultLinkPointWidget = void 0;\nconst React = require(\"react\");\nconst styled_1 = require(\"@emotion/styled\");\nvar S;\n(function (S) {\n    S.PointTop = styled_1.default.circle `\n\t\tpointer-events: all;\n\t`;\n})(S || (S = {}));\nclass DefaultLinkPointWidget extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selected: false\n        };\n    }\n    render() {\n        const { point } = this.props;\n        return (React.createElement(\"g\", null,\n            React.createElement(\"circle\", { cx: point.getPosition().x, cy: point.getPosition().y, r: 5, fill: this.state.selected || this.props.point.isSelected() ? this.props.colorSelected : this.props.color }),\n            React.createElement(S.PointTop, { className: \"point\", onMouseLeave: () => {\n                    this.setState({ selected: false });\n                }, onMouseEnter: () => {\n                    this.setState({ selected: true });\n                }, \"data-id\": point.getID(), \"data-linkid\": point.getLink().getID(), cx: point.getPosition().x, cy: point.getPosition().y, r: 15, opacity: 0.0 })));\n    }\n}\nexports.DefaultLinkPointWidget = DefaultLinkPointWidget;\n//# sourceMappingURL=DefaultLinkPointWidget.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultLinkSegmentWidget = void 0;\nconst React = require(\"react\");\nclass DefaultLinkSegmentWidget extends React.Component {\n    render() {\n        const Bottom = React.cloneElement(this.props.factory.generateLinkSegment(this.props.link, this.props.selected || this.props.link.isSelected(), this.props.path), {\n            ref: this.props.forwardRef\n        });\n        const Top = React.cloneElement(Bottom, Object.assign(Object.assign({ strokeLinecap: 'round', onMouseLeave: () => {\n                this.props.onSelection(false);\n            }, onMouseEnter: () => {\n                this.props.onSelection(true);\n            } }, this.props.extras), { ref: null, 'data-linkid': this.props.link.getID(), strokeOpacity: this.props.selected ? 0.1 : 0, strokeWidth: 20, fill: 'none', onContextMenu: () => {\n                if (!this.props.link.isLocked()) {\n                    event.preventDefault();\n                    this.props.link.remove();\n                }\n            } }));\n        return (React.createElement(\"g\", null,\n            Bottom,\n            Top));\n    }\n}\nexports.DefaultLinkSegmentWidget = DefaultLinkSegmentWidget;\n//# sourceMappingURL=DefaultLinkSegmentWidget.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultLinkWidget = void 0;\nconst React = require(\"react\");\nconst react_diagrams_core_1 = require(\"@projectstorm/react-diagrams-core\");\nconst DefaultLinkPointWidget_1 = require(\"./DefaultLinkPointWidget\");\nconst DefaultLinkSegmentWidget_1 = require(\"./DefaultLinkSegmentWidget\");\nclass DefaultLinkWidget extends React.Component {\n    constructor(props) {\n        super(props);\n        this.refPaths = [];\n        this.state = {\n            selected: false\n        };\n    }\n    renderPoints() {\n        var _a;\n        return (_a = this.props.renderPoints) !== null && _a !== void 0 ? _a : true;\n    }\n    componentDidUpdate() {\n        this.props.link.setRenderedPaths(this.refPaths.map((ref) => {\n            return ref.current;\n        }));\n    }\n    componentDidMount() {\n        this.props.link.setRenderedPaths(this.refPaths.map((ref) => {\n            return ref.current;\n        }));\n    }\n    componentWillUnmount() {\n        this.props.link.setRenderedPaths([]);\n    }\n    addPointToLink(event, index) {\n        if (!event.shiftKey &&\n            !this.props.link.isLocked() &&\n            this.props.link.getPoints().length - 1 <= this.props.diagramEngine.getMaxNumberPointsPerLink()) {\n            const point = new react_diagrams_core_1.PointModel({\n                link: this.props.link,\n                position: this.props.diagramEngine.getRelativeMousePoint(event)\n            });\n            this.props.link.addPoint(point, index);\n            event.persist();\n            event.stopPropagation();\n            this.forceUpdate(() => {\n                this.props.diagramEngine.getActionEventBus().fireAction({\n                    event,\n                    model: point\n                });\n            });\n        }\n    }\n    generatePoint(point) {\n        return (React.createElement(DefaultLinkPointWidget_1.DefaultLinkPointWidget, { key: point.getID(), point: point, colorSelected: this.props.link.getOptions().selectedColor, color: this.props.link.getOptions().color }));\n    }\n    generateLink(path, extraProps, id) {\n        const ref = React.createRef();\n        this.refPaths.push(ref);\n        return (React.createElement(DefaultLinkSegmentWidget_1.DefaultLinkSegmentWidget, { key: `link-${id}`, path: path, selected: this.state.selected, diagramEngine: this.props.diagramEngine, factory: this.props.diagramEngine.getFactoryForLink(this.props.link), link: this.props.link, forwardRef: ref, onSelection: (selected) => {\n                this.setState({ selected: selected });\n            }, extras: extraProps }));\n    }\n    render() {\n        //ensure id is present for all points on the path\n        var points = this.props.link.getPoints();\n        var paths = [];\n        this.refPaths = [];\n        if (points.length === 2) {\n            paths.push(this.generateLink(this.props.link.getSVGPath(), {\n                onMouseDown: (event) => {\n                    var _a, _b;\n                    (_b = (_a = this.props).selected) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n                    this.addPointToLink(event, 1);\n                }\n            }, '0'));\n            // draw the link as dangeling\n            if (this.props.link.getTargetPort() == null) {\n                paths.push(this.generatePoint(points[1]));\n            }\n        }\n        else {\n            //draw the multiple anchors and complex line instead\n            for (let j = 0; j < points.length - 1; j++) {\n                paths.push(this.generateLink(react_diagrams_core_1.LinkWidget.generateLinePath(points[j], points[j + 1]), {\n                    'data-linkid': this.props.link.getID(),\n                    'data-point': j,\n                    onMouseDown: (event) => {\n                        var _a, _b;\n                        (_b = (_a = this.props).selected) === null || _b === void 0 ? void 0 : _b.call(_a, event);\n                        this.addPointToLink(event, j + 1);\n                    }\n                }, j));\n            }\n            if (this.renderPoints()) {\n                //render the circles\n                for (let i = 1; i < points.length - 1; i++) {\n                    paths.push(this.generatePoint(points[i]));\n                }\n                if (this.props.link.getTargetPort() == null) {\n                    paths.push(this.generatePoint(points[points.length - 1]));\n                }\n            }\n        }\n        return React.createElement(\"g\", { \"data-default-link-test\": this.props.link.getOptions().testName }, paths);\n    }\n}\nexports.DefaultLinkWidget = DefaultLinkWidget;\n//# sourceMappingURL=DefaultLinkWidget.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultNodeFactory = void 0;\nconst React = require(\"react\");\nconst DefaultNodeModel_1 = require(\"./DefaultNodeModel\");\nconst DefaultNodeWidget_1 = require(\"./DefaultNodeWidget\");\nconst react_canvas_core_1 = require(\"@projectstorm/react-canvas-core\");\nclass DefaultNodeFactory extends react_canvas_core_1.AbstractReactFactory {\n    constructor() {\n        super('default');\n    }\n    generateReactWidget(event) {\n        return React.createElement(DefaultNodeWidget_1.DefaultNodeWidget, { engine: this.engine, node: event.model });\n    }\n    generateModel(event) {\n        return new DefaultNodeModel_1.DefaultNodeModel();\n    }\n}\nexports.DefaultNodeFactory = DefaultNodeFactory;\n//# sourceMappingURL=DefaultNodeFactory.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultNodeModel = void 0;\nconst _ = require(\"lodash\");\nconst react_diagrams_core_1 = require(\"@projectstorm/react-diagrams-core\");\nconst DefaultPortModel_1 = require(\"../port/DefaultPortModel\");\nclass DefaultNodeModel extends react_diagrams_core_1.NodeModel {\n    constructor(options = {}, color) {\n        if (typeof options === 'string') {\n            options = {\n                name: options,\n                color: color\n            };\n        }\n        super(Object.assign({ type: 'default', name: 'Untitled', color: 'rgb(0,192,255)' }, options));\n        this.portsOut = [];\n        this.portsIn = [];\n    }\n    doClone(lookupTable, clone) {\n        clone.portsIn = [];\n        clone.portsOut = [];\n        super.doClone(lookupTable, clone);\n    }\n    removePort(port) {\n        super.removePort(port);\n        if (port.getOptions().in) {\n            this.portsIn.splice(this.portsIn.indexOf(port), 1);\n        }\n        else {\n            this.portsOut.splice(this.portsOut.indexOf(port), 1);\n        }\n    }\n    addPort(port) {\n        super.addPort(port);\n        if (port.getOptions().in) {\n            if (this.portsIn.indexOf(port) === -1) {\n                this.portsIn.push(port);\n            }\n        }\n        else {\n            if (this.portsOut.indexOf(port) === -1) {\n                this.portsOut.push(port);\n            }\n        }\n        return port;\n    }\n    addInPort(label, after = true) {\n        const p = new DefaultPortModel_1.DefaultPortModel({\n            in: true,\n            name: label,\n            label: label,\n            alignment: react_diagrams_core_1.PortModelAlignment.LEFT\n        });\n        if (!after) {\n            this.portsIn.splice(0, 0, p);\n        }\n        return this.addPort(p);\n    }\n    addOutPort(label, after = true) {\n        const p = new DefaultPortModel_1.DefaultPortModel({\n            in: false,\n            name: label,\n            label: label,\n            alignment: react_diagrams_core_1.PortModelAlignment.RIGHT\n        });\n        if (!after) {\n            this.portsOut.splice(0, 0, p);\n        }\n        return this.addPort(p);\n    }\n    deserialize(event) {\n        super.deserialize(event);\n        this.options.name = event.data.name;\n        this.options.color = event.data.color;\n        this.portsIn = _.map(event.data.portsInOrder, (id) => {\n            return this.getPortFromID(id);\n        });\n        this.portsOut = _.map(event.data.portsOutOrder, (id) => {\n            return this.getPortFromID(id);\n        });\n    }\n    serialize() {\n        return Object.assign(Object.assign({}, super.serialize()), { name: this.options.name, color: this.options.color, portsInOrder: _.map(this.portsIn, (port) => {\n                return port.getID();\n            }), portsOutOrder: _.map(this.portsOut, (port) => {\n                return port.getID();\n            }) });\n    }\n    getInPorts() {\n        return this.portsIn;\n    }\n    getOutPorts() {\n        return this.portsOut;\n    }\n}\nexports.DefaultNodeModel = DefaultNodeModel;\n//# sourceMappingURL=DefaultNodeModel.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultNodeWidget = void 0;\nconst React = require(\"react\");\nconst _ = require(\"lodash\");\nconst DefaultPortLabelWidget_1 = require(\"../port/DefaultPortLabelWidget\");\nconst styled_1 = require(\"@emotion/styled\");\nvar S;\n(function (S) {\n    S.Node = styled_1.default.div `\n\t\tbackground-color: ${(p) => p.background};\n\t\tborder-radius: 5px;\n\t\tfont-family: sans-serif;\n\t\tcolor: white;\n\t\tborder: solid 2px black;\n\t\toverflow: visible;\n\t\tfont-size: 11px;\n\t\tborder: solid 2px ${(p) => (p.selected ? 'rgb(0,192,255)' : 'black')};\n\t`;\n    S.Title = styled_1.default.div `\n\t\tbackground: rgba(0, 0, 0, 0.3);\n\t\tdisplay: flex;\n\t\twhite-space: nowrap;\n\t\tjustify-items: center;\n\t`;\n    S.TitleName = styled_1.default.div `\n\t\tflex-grow: 1;\n\t\tpadding: 5px 5px;\n\t`;\n    S.Ports = styled_1.default.div `\n\t\tdisplay: flex;\n\t\tbackground-image: linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.2));\n\t`;\n    S.PortsContainer = styled_1.default.div `\n\t\tflex-grow: 1;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\n\t\t&:first-of-type {\n\t\t\tmargin-right: 10px;\n\t\t}\n\n\t\t&:only-child {\n\t\t\tmargin-right: 0px;\n\t\t}\n\t`;\n})(S || (S = {}));\n/**\n * Default node that models the DefaultNodeModel. It creates two columns\n * for both all the input ports on the left, and the output ports on the right.\n */\nclass DefaultNodeWidget extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.generatePort = (port) => {\n            return React.createElement(DefaultPortLabelWidget_1.DefaultPortLabel, { engine: this.props.engine, port: port, key: port.getID() });\n        };\n    }\n    render() {\n        return (React.createElement(S.Node, { \"data-default-node-name\": this.props.node.getOptions().name, selected: this.props.node.isSelected(), background: this.props.node.getOptions().color },\n            React.createElement(S.Title, null,\n                React.createElement(S.TitleName, null, this.props.node.getOptions().name)),\n            React.createElement(S.Ports, null,\n                React.createElement(S.PortsContainer, null, _.map(this.props.node.getInPorts(), this.generatePort)),\n                React.createElement(S.PortsContainer, null, _.map(this.props.node.getOutPorts(), this.generatePort)))));\n    }\n}\nexports.DefaultNodeWidget = DefaultNodeWidget;\n//# sourceMappingURL=DefaultNodeWidget.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultPortFactory = void 0;\nconst DefaultPortModel_1 = require(\"./DefaultPortModel\");\nconst react_canvas_core_1 = require(\"@projectstorm/react-canvas-core\");\nclass DefaultPortFactory extends react_canvas_core_1.AbstractModelFactory {\n    constructor() {\n        super('default');\n    }\n    generateModel() {\n        return new DefaultPortModel_1.DefaultPortModel({\n            name: 'unknown'\n        });\n    }\n}\nexports.DefaultPortFactory = DefaultPortFactory;\n//# sourceMappingURL=DefaultPortFactory.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultPortLabel = void 0;\nconst React = require(\"react\");\nconst react_diagrams_core_1 = require(\"@projectstorm/react-diagrams-core\");\nconst styled_1 = require(\"@emotion/styled\");\nvar S;\n(function (S) {\n    S.PortLabel = styled_1.default.div `\n\t\tdisplay: flex;\n\t\tmargin-top: 1px;\n\t\talign-items: center;\n\t`;\n    S.Label = styled_1.default.div `\n\t\tpadding: 0 5px;\n\t\tflex-grow: 1;\n\t`;\n    S.Port = styled_1.default.div `\n\t\twidth: 15px;\n\t\theight: 15px;\n\t\tbackground: rgba(255, 255, 255, 0.1);\n\n\t\t&:hover {\n\t\t\tbackground: rgb(192, 255, 0);\n\t\t}\n\t`;\n})(S || (S = {}));\nclass DefaultPortLabel extends React.Component {\n    render() {\n        const port = (React.createElement(react_diagrams_core_1.PortWidget, { engine: this.props.engine, port: this.props.port },\n            React.createElement(S.Port, null)));\n        const label = React.createElement(S.Label, null, this.props.port.getOptions().label);\n        return (React.createElement(S.PortLabel, null,\n            this.props.port.getOptions().in ? port : label,\n            this.props.port.getOptions().in ? label : port));\n    }\n}\nexports.DefaultPortLabel = DefaultPortLabel;\n//# sourceMappingURL=DefaultPortLabelWidget.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DefaultPortModel = void 0;\nconst react_diagrams_core_1 = require(\"@projectstorm/react-diagrams-core\");\nconst DefaultLinkModel_1 = require(\"../link/DefaultLinkModel\");\nclass DefaultPortModel extends react_diagrams_core_1.PortModel {\n    constructor(options, name, label) {\n        if (!!name) {\n            options = {\n                in: !!options,\n                name: name,\n                label: label\n            };\n        }\n        options = options;\n        super(Object.assign({ label: options.label || options.name, alignment: options.in ? react_diagrams_core_1.PortModelAlignment.LEFT : react_diagrams_core_1.PortModelAlignment.RIGHT, type: 'default' }, options));\n    }\n    deserialize(event) {\n        super.deserialize(event);\n        this.options.in = event.data.in;\n        this.options.label = event.data.label;\n    }\n    serialize() {\n        return Object.assign(Object.assign({}, super.serialize()), { in: this.options.in, label: this.options.label });\n    }\n    link(port, factory) {\n        let link = this.createLinkModel(factory);\n        link.setSourcePort(this);\n        link.setTargetPort(port);\n        return link;\n    }\n    canLinkToPort(port) {\n        if (port instanceof DefaultPortModel) {\n            return this.options.in !== port.getOptions().in;\n        }\n        return true;\n    }\n    createLinkModel(factory) {\n        let link = super.createLinkModel();\n        if (!link && factory) {\n            return factory.generateModel({});\n        }\n        return link || new DefaultLinkModel_1.DefaultLinkModel();\n    }\n}\nexports.DefaultPortModel = DefaultPortModel;\n//# sourceMappingURL=DefaultPortModel.js.map"],"names":[],"sourceRoot":""}