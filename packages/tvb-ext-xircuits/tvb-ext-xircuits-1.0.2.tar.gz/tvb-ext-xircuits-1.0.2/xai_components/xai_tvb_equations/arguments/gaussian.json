{
    "description": "<div class=\"document\" id=\"traited-class-tvb-datatypes-equations-gaussian\">\n<h1 class=\"title\">Traited class [tvb.datatypes.equations.Gaussian]</h1>\n<blockquote>\nA Gaussian equation.\noffset: parameter to extend the behaviour of this function\nwhen spatializing model parameters.</blockquote>\n<div class=\"section\" id=\"attributes-declared\">\n<h1>Attributes declared</h1>\n<dl class=\"docutils\">\n<dt>equation <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.datatypes.equations.Gaussian.equation = Final(field_type=&lt;class 'str'&gt;, default='(amp * exp(-((var-midpoint)**2 / (2.0 * sigma**2))))+offset', required=True)</span></dt>\n<dd><span class=\"formula\">(<i>amp</i>exp<span class=\"stretchy\">(</span>\u2009\u2212\u2009<span class=\"stretchy\">(</span><span class=\"stretchy\">(</span><i>x</i>\u2009\u2212\u2009<i>midpoint</i><span class=\"stretchy\">)</span><sup>2</sup>\u2009\u2044\u2009<span class=\"stretchy\">(</span>2.0<i>\u03c3</i><sup>2</sup><span class=\"stretchy\">)</span><span class=\"stretchy\">)</span><span class=\"stretchy\">)</span>)\u2009+\u2009<i>offset</i></span></dd>\n</dl>\n<p>parameters : tvb.datatypes.equations.Gaussian.parameters = Attr(field_type=&lt;class 'dict'&gt;, default=&lt;function Gaussian.&lt;lambda&gt; at 0x7fdbbc171700&gt;, required=True)</p>\n<p>gid : tvb.basic.neotraits._core.HasTraits.gid = Attr(field_type=&lt;class 'uuid.UUID'&gt;, default=None, required=True)</p>\n</div>\n</div>\n",
    "arguments": {
        "equation": "<div class=\"document\">\n<dl class=\"docutils\">\n<dt>:math:`(amp expleft(-left(left(x-midpointright)^2 /</dt>\n<dd>left(2.0 sigma^2right)right)right)) + offset`</dd>\n</dl>\n</div>\n"
    }
}