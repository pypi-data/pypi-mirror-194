{
    "description": "<div class=\"document\" id=\"traited-class-tvb-simulator-models-wong-wang-reducedwongwang\">\n<h1 class=\"title\">Traited class [tvb.simulator.models.wong_wang.ReducedWongWang]</h1>\n<blockquote>\n<table class=\"docutils citation\" frame=\"void\" id=\"ww-2006\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\">[WW_2006]</td><td>Kong-Fatt Wong and Xiao-Jing Wang,  <em>A Recurrent Network\nMechanism of Time Integration in Perceptual Decisions</em>.\nJournal of Neuroscience 26(4), 1314-1328, 2006.</td></tr>\n</tbody>\n</table>\n<table class=\"docutils citation\" frame=\"void\" id=\"dpa-2013\" rules=\"none\">\n<colgroup><col class=\"label\" /><col /></colgroup>\n<tbody valign=\"top\">\n<tr><td class=\"label\"><a class=\"fn-backref\" href=\"#citation-reference-1\">[DPA_2013]</a></td><td>Deco Gustavo, Ponce Alvarez Adrian, Dante Mantini, Gian Luca\nRomani, Patric Hagmann and Maurizio Corbetta. <em>Resting-State\nFunctional Connectivity Emerges from Structurally and\nDynamically Shaped Slow Linear Fluctuations</em>. The Journal of\nNeuroscience 32(27), 11239-11252, 2013.</td></tr>\n</tbody>\n</table>\n<p>Equations taken from <a class=\"citation-reference\" href=\"#dpa-2013\" id=\"citation-reference-1\">[DPA_2013]</a> , page 11242</p>\n<div class=\"formula\">\n<span class=\"environment align\"><span class=\"arrayrow\">\n<span class=\"arraycell align-r\">\n<i>x</i><sub><i>k</i></sub>\n</span>\n<span class=\"arraycell align-l\">\n\u2009=\u2009<i>w</i>\u2006<i>J</i><sub><i>N</i></sub>\u2006<i>S</i><sub><i>k</i></sub>\u2009+\u2009<i>I</i><sub><i>o</i></sub>\u2009+\u2009<i>J</i><sub><i>N</i></sub><b>\u0393</b>(<i>S</i><sub><i>k</i></sub>,\u2009<i>S</i><sub><i>j</i></sub>,\u2009<i>u</i><sub><i>kj</i></sub>)\n</span>\n\n</span>\n<span class=\"arrayrow\">\n<span class=\"arraycell align-r\">\n\u2005\n</span>\n<span class=\"arraycell align-l\">\n\u2005\n</span>\n\n</span>\n<span class=\"arrayrow\">\n<span class=\"arraycell align-r\">\n<i>H</i>(<i>x</i><sub><i>k</i></sub>)\n</span>\n<span class=\"arraycell align-l\">\n\u2009=\u2009<span class=\"fullfraction\"><span class=\"ignored\">(</span><span class=\"numerator\"><i>ax</i><sub><i>k</i></sub>\u2009\u2212\u2009<i>b</i></span><span class=\"ignored\">)/(</span><span class=\"denominator\">1\u2009\u2212\u2009exp(\u2009\u2212\u2009<i>d</i>(<i>ax</i><sub><i>k</i></sub>\u2009\u2212\u2009<i>b</i>))</span><span class=\"ignored\">)</span></span>\n</span>\n\n</span>\n<span class=\"arrayrow\">\n<span class=\"arraycell align-r\">\n\u2005\n</span>\n<span class=\"arraycell align-l\">\n\u2005\n</span>\n\n</span>\n<span class=\"arrayrow\">\n<span class=\"arraycell align-r\">\n<i>\u1e60</i><sub><i>k</i></sub>\n</span>\n<span class=\"arraycell align-l\">\n\u2009=\u2009\u2009\u2212\u2009<span class=\"fullfraction\"><span class=\"ignored\">(</span><span class=\"numerator\"><i>S</i><sub><i>k</i></sub></span><span class=\"ignored\">)/(</span><span class=\"denominator\"><i>\u03c4</i><sub><i>s</i></sub></span><span class=\"ignored\">)</span></span>\u2009+\u2009(1\u2009\u2212\u2009<i>S</i><sub><i>k</i></sub>)\u2006<i>H</i>(<i>x</i><sub><i>k</i></sub>)\u2006<i>\u03b3</i>\n</span>\n\n</span>\n</span>\n</div>\n</blockquote>\n<div class=\"section\" id=\"attributes-declared\">\n<h1>Attributes declared</h1>\n<dl class=\"docutils\">\n<dt>a <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.wong_wang.ReducedWongWang.a = NArray(label='<span class=\"formula\"><i>a</i></span>', dtype=float64, default=array([0.27]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>[n/C]. Input gain parameter, chosen to fit numerical solutions.</dd>\n<dt>b <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.wong_wang.ReducedWongWang.b = NArray(label='<span class=\"formula\"><i>b</i></span>', dtype=float64, default=array([0.108]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>[kHz]. Input shift parameter chosen to fit numerical solutions.</dd>\n<dt>d <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.wong_wang.ReducedWongWang.d = NArray(label='<span class=\"formula\"><i>d</i></span>', dtype=float64, default=array([154.]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>[ms]. Parameter chosen to fit numerical solutions.</dd>\n<dt>gamma <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.wong_wang.ReducedWongWang.gamma = NArray(label='<span class=\"formula\"><br/><i>gamma</i></span>', dtype=float64, default=array([0.641]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Kinetic parameter</dd>\n<dt>tau_s <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.wong_wang.ReducedWongWang.tau_s = NArray(label='<span class=\"formula\"><br/><i>tau</i><sub><i>S</i></sub></span>', dtype=float64, default=array([100.]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Kinetic parameter. NMDA decay time constant.</dd>\n<dt>w <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.wong_wang.ReducedWongWang.w = NArray(label='<span class=\"formula\"><i>w</i></span>', dtype=float64, default=array([0.6]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Excitatory recurrence</dd>\n<dt>J_N <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.wong_wang.ReducedWongWang.J_N = NArray(label='<span class=\"formula\"><i>J</i><sub><i>N</i></sub></span>', dtype=float64, default=array([0.2609]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>Excitatory recurrence</dd>\n<dt>I_o <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.wong_wang.ReducedWongWang.I_o = NArray(label='<span class=\"formula\"><i>I</i><sub><i>o</i></sub></span>', dtype=float64, default=array([0.33]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>[nA] Effective external input</dd>\n<dt>sigma_noise <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.wong_wang.ReducedWongWang.sigma_noise = NArray(label='<span class=\"formula\"><br/><i>sigma</i><sub><i>noise</i></sub></span>', dtype=float64, default=array([1.e-09]), dim_names=(), ndim=None, required=True)</span></dt>\n<dd>[nA] Noise amplitude. Take this value into account for stochatic\nintegration schemes.</dd>\n<dt>state_variable_range <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.wong_wang.ReducedWongWang.state_variable_range = Final(field_type=&lt;class 'dict'&gt;, default={'S': array([0., 1.])}, required=True)</span></dt>\n<dd>Population firing rate</dd>\n<dt>state_variable_boundaries <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.wong_wang.ReducedWongWang.state_variable_boundaries = Final(field_type=&lt;class 'dict'&gt;, default={'S': array([0., 1.])}, required=True)</span></dt>\n<dd>The values for each state-variable should be set to encompass\nthe boundaries of the dynamic range of that state-variable. Set None for one-sided boundaries</dd>\n<dt>variables_of_interest <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">tvb.simulator.models.wong_wang.ReducedWongWang.variables_of_interest = List(of=&lt;class 'str'&gt;, default=('S',), required=True)</span></dt>\n<dd>default state variables to be monitored</dd>\n</dl>\n<p>gid : tvb.basic.neotraits._core.HasTraits.gid = Attr(field_type=&lt;class 'uuid.UUID'&gt;, default=None, required=True)</p>\n</div>\n</div>\n",
    "arguments": {
        "a": "<div class=\"document\">\n<p>[n/C]. Input gain parameter, chosen to fit numerical solutions.</p>\n</div>\n",
        "b": "<div class=\"document\">\n<p>[kHz]. Input shift parameter chosen to fit numerical solutions.</p>\n</div>\n",
        "d": "<div class=\"document\">\n<p>[ms]. Parameter chosen to fit numerical solutions.</p>\n</div>\n",
        "gamma": "<div class=\"document\">\n<p>Kinetic parameter</p>\n</div>\n",
        "tau_s": "<div class=\"document\">\n<p>Kinetic parameter. NMDA decay time constant.</p>\n</div>\n",
        "w": "<div class=\"document\">\n<p>Excitatory recurrence</p>\n</div>\n",
        "J_N": "<div class=\"document\">\n<p>Excitatory recurrence</p>\n</div>\n",
        "I_o": "<div class=\"document\">\n<p>[nA] Effective external input</p>\n</div>\n",
        "sigma_noise": "<div class=\"document\">\n<dl class=\"docutils\">\n<dt>[nA] Noise amplitude. Take this value into account for stochatic</dt>\n<dd>integration schemes.</dd>\n</dl>\n</div>\n",
        "state_variable_range": "<div class=\"document\">\n<p>Population firing rate</p>\n</div>\n",
        "state_variable_boundaries": "<div class=\"document\">\n<dl class=\"docutils\">\n<dt>The values for each state-variable should be set to encompass</dt>\n<dd>the boundaries of the dynamic range of that state-variable. Set None for one-sided boundaries</dd>\n</dl>\n</div>\n",
        "variables_of_interest": "<div class=\"document\">\n<p>default state variables to be monitored</p>\n</div>\n"
    }
}