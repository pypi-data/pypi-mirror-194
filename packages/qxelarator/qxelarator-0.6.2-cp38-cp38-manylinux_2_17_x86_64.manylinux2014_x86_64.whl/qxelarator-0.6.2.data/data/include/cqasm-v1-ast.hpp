/** \file
 * Defines the types for the cQASM \ref cqasm::v1::ast "abstract syntax tree",
 * based on the classes from cqasm::tree.
 *
 * This file only contains utility stuff on top of the abstract syntax tree
 * structure generated by \ref tree-gen based on `cqasm-ast.tree`. Refer to
 * the cqasm::ast namespace documentation for more information.
 */

#pragma once

#include "cqasm-v1-ast-gen.hpp"
#include <iostream>
#include <sstream>

namespace cqasm {
namespace v1 {
namespace ast {

/**
 * Special/temporary string builder node, used to build strings from fragments
 * and escape sequences while parsing. This is abstracted out of the AST; it
 * should never appear after parsing completes.
 */
class StringBuilder : public cqasm::tree::Base {
public:
    std::ostringstream stream;

    /**
     * Pushes a string fragment into the string.
     */
    void push_string(const std::string &str);

    /**
     * Pushes an escape sequence into the string.
     */
    void push_escape(const std::string &escape);

};

} // namespace ast
} // namespace v1
} // namespace cqasm
