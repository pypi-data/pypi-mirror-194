# coding: utf-8

"""
    Datový konektor Domino pro eSMLOUVY

    Toto je datový konektor umožňující datovou výměnu mezi obchodní logikou aplikace eSMLOUVY a datovým serverem HCL Domino.  Ovládá se pomocí REST API   # noqa: E501

    OpenAPI spec version: 1.1.1
    Contact: info@sysnet.cz
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class RegistrationSheet(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'base': 'BaseSheetDocument',
        'contract_value': 'float',
        'contract_type': 'str',
        'date_contract': 'date',
        'date_finish_contract': 'date',
        'contract_duration': 'str',
        'contract_value_vat': 'float',
        'calendar_value_check': 'float',
        'contractor_vat_payer': 'bool',
        'finance_eu': 'bool'
    }

    attribute_map = {
        'base': 'base',
        'contract_value': 'contract_value',
        'contract_type': 'contract_type',
        'date_contract': 'date_contract',
        'date_finish_contract': 'date_finish_contract',
        'contract_duration': 'contract_duration',
        'contract_value_vat': 'contract_value_vat',
        'calendar_value_check': 'calendar_value_check',
        'contractor_vat_payer': 'contractor_vat_payer',
        'finance_eu': 'finance_eu'
    }

    def __init__(self, base=None, contract_value=None, contract_type=None, date_contract=None, date_finish_contract=None, contract_duration=None, contract_value_vat=None, calendar_value_check=None, contractor_vat_payer=None, finance_eu=None):  # noqa: E501
        """RegistrationSheet - a model defined in Swagger"""  # noqa: E501
        self._base = None
        self._contract_value = None
        self._contract_type = None
        self._date_contract = None
        self._date_finish_contract = None
        self._contract_duration = None
        self._contract_value_vat = None
        self._calendar_value_check = None
        self._contractor_vat_payer = None
        self._finance_eu = None
        self.discriminator = None
        if base is not None:
            self.base = base
        if contract_value is not None:
            self.contract_value = contract_value
        if contract_type is not None:
            self.contract_type = contract_type
        if date_contract is not None:
            self.date_contract = date_contract
        if date_finish_contract is not None:
            self.date_finish_contract = date_finish_contract
        if contract_duration is not None:
            self.contract_duration = contract_duration
        if contract_value_vat is not None:
            self.contract_value_vat = contract_value_vat
        if calendar_value_check is not None:
            self.calendar_value_check = calendar_value_check
        if contractor_vat_payer is not None:
            self.contractor_vat_payer = contractor_vat_payer
        if finance_eu is not None:
            self.finance_eu = finance_eu

    @property
    def base(self):
        """Gets the base of this RegistrationSheet.  # noqa: E501


        :return: The base of this RegistrationSheet.  # noqa: E501
        :rtype: BaseSheetDocument
        """
        return self._base

    @base.setter
    def base(self, base):
        """Sets the base of this RegistrationSheet.


        :param base: The base of this RegistrationSheet.  # noqa: E501
        :type: BaseSheetDocument
        """

        self._base = base

    @property
    def contract_value(self):
        """Gets the contract_value of this RegistrationSheet.  # noqa: E501

        Celková částka v Kč bez DPH ve smyslu zákona 137/2006 Sb o veřejných zakázkách   # noqa: E501

        :return: The contract_value of this RegistrationSheet.  # noqa: E501
        :rtype: float
        """
        return self._contract_value

    @contract_value.setter
    def contract_value(self, contract_value):
        """Sets the contract_value of this RegistrationSheet.

        Celková částka v Kč bez DPH ve smyslu zákona 137/2006 Sb o veřejných zakázkách   # noqa: E501

        :param contract_value: The contract_value of this RegistrationSheet.  # noqa: E501
        :type: float
        """

        self._contract_value = contract_value

    @property
    def contract_type(self):
        """Gets the contract_type of this RegistrationSheet.  # noqa: E501

        Typ smlouvy (SA, SB, SC, SD, SX)  # noqa: E501

        :return: The contract_type of this RegistrationSheet.  # noqa: E501
        :rtype: str
        """
        return self._contract_type

    @contract_type.setter
    def contract_type(self, contract_type):
        """Sets the contract_type of this RegistrationSheet.

        Typ smlouvy (SA, SB, SC, SD, SX)  # noqa: E501

        :param contract_type: The contract_type of this RegistrationSheet.  # noqa: E501
        :type: str
        """

        self._contract_type = contract_type

    @property
    def date_contract(self):
        """Gets the date_contract of this RegistrationSheet.  # noqa: E501

        Odhad termínu uzavření smlouvy  # noqa: E501

        :return: The date_contract of this RegistrationSheet.  # noqa: E501
        :rtype: date
        """
        return self._date_contract

    @date_contract.setter
    def date_contract(self, date_contract):
        """Sets the date_contract of this RegistrationSheet.

        Odhad termínu uzavření smlouvy  # noqa: E501

        :param date_contract: The date_contract of this RegistrationSheet.  # noqa: E501
        :type: date
        """

        self._date_contract = date_contract

    @property
    def date_finish_contract(self):
        """Gets the date_finish_contract of this RegistrationSheet.  # noqa: E501

        Odhad termínu ukončení smlouvy  # noqa: E501

        :return: The date_finish_contract of this RegistrationSheet.  # noqa: E501
        :rtype: date
        """
        return self._date_finish_contract

    @date_finish_contract.setter
    def date_finish_contract(self, date_finish_contract):
        """Sets the date_finish_contract of this RegistrationSheet.

        Odhad termínu ukončení smlouvy  # noqa: E501

        :param date_finish_contract: The date_finish_contract of this RegistrationSheet.  # noqa: E501
        :type: date
        """

        self._date_finish_contract = date_finish_contract

    @property
    def contract_duration(self):
        """Gets the contract_duration of this RegistrationSheet.  # noqa: E501

        Doba trvání  Doba určitá (0), Doba neurčitá (1), Do předložení předmětu smlouvy (2) |   # noqa: E501

        :return: The contract_duration of this RegistrationSheet.  # noqa: E501
        :rtype: str
        """
        return self._contract_duration

    @contract_duration.setter
    def contract_duration(self, contract_duration):
        """Sets the contract_duration of this RegistrationSheet.

        Doba trvání  Doba určitá (0), Doba neurčitá (1), Do předložení předmětu smlouvy (2) |   # noqa: E501

        :param contract_duration: The contract_duration of this RegistrationSheet.  # noqa: E501
        :type: str
        """

        self._contract_duration = contract_duration

    @property
    def contract_value_vat(self):
        """Gets the contract_value_vat of this RegistrationSheet.  # noqa: E501

        contract_value_tax - Celková částka za smlouvu v Kč vč. DPH  # noqa: E501

        :return: The contract_value_vat of this RegistrationSheet.  # noqa: E501
        :rtype: float
        """
        return self._contract_value_vat

    @contract_value_vat.setter
    def contract_value_vat(self, contract_value_vat):
        """Sets the contract_value_vat of this RegistrationSheet.

        contract_value_tax - Celková částka za smlouvu v Kč vč. DPH  # noqa: E501

        :param contract_value_vat: The contract_value_vat of this RegistrationSheet.  # noqa: E501
        :type: float
        """

        self._contract_value_vat = contract_value_vat

    @property
    def calendar_value_check(self):
        """Gets the calendar_value_check of this RegistrationSheet.  # noqa: E501

        Kontrolní součet z platebního kalendáře  # noqa: E501

        :return: The calendar_value_check of this RegistrationSheet.  # noqa: E501
        :rtype: float
        """
        return self._calendar_value_check

    @calendar_value_check.setter
    def calendar_value_check(self, calendar_value_check):
        """Sets the calendar_value_check of this RegistrationSheet.

        Kontrolní součet z platebního kalendáře  # noqa: E501

        :param calendar_value_check: The calendar_value_check of this RegistrationSheet.  # noqa: E501
        :type: float
        """

        self._calendar_value_check = calendar_value_check

    @property
    def contractor_vat_payer(self):
        """Gets the contractor_vat_payer of this RegistrationSheet.  # noqa: E501

        Dodavatel je/není plátce DPH  # noqa: E501

        :return: The contractor_vat_payer of this RegistrationSheet.  # noqa: E501
        :rtype: bool
        """
        return self._contractor_vat_payer

    @contractor_vat_payer.setter
    def contractor_vat_payer(self, contractor_vat_payer):
        """Sets the contractor_vat_payer of this RegistrationSheet.

        Dodavatel je/není plátce DPH  # noqa: E501

        :param contractor_vat_payer: The contractor_vat_payer of this RegistrationSheet.  # noqa: E501
        :type: bool
        """

        self._contractor_vat_payer = contractor_vat_payer

    @property
    def finance_eu(self):
        """Gets the finance_eu of this RegistrationSheet.  # noqa: E501

        Spolufinancovaní EU  # noqa: E501

        :return: The finance_eu of this RegistrationSheet.  # noqa: E501
        :rtype: bool
        """
        return self._finance_eu

    @finance_eu.setter
    def finance_eu(self, finance_eu):
        """Sets the finance_eu of this RegistrationSheet.

        Spolufinancovaní EU  # noqa: E501

        :param finance_eu: The finance_eu of this RegistrationSheet.  # noqa: E501
        :type: bool
        """

        self._finance_eu = finance_eu

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(RegistrationSheet, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, RegistrationSheet):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
