# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic
import typing_extensions

from ...core.datetime_utils import serialize_datetime
from ..common.embedding_type import EmbeddingType


class UpdateAppRequest(pydantic.BaseModel):
    name: typing.Optional[str]
    embeddings: typing.Optional[typing.List[EmbeddingType]]

    class Partial(typing_extensions.TypedDict):
        name: typing_extensions.NotRequired[typing.Optional[str]]
        embeddings: typing_extensions.NotRequired[typing.Optional[typing.List[EmbeddingType]]]

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        json_encoders = {dt.datetime: serialize_datetime}
