# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic
import typing_extensions

from ...core.datetime_utils import serialize_datetime
from .llm_request_params import LLMRequestParams
from .search_params import SearchParams


class PromptRequest(pydantic.BaseModel):
    prompt: str
    search_params: typing.Optional[SearchParams]
    llm_params: typing.Optional[LLMRequestParams]
    enable_search: typing.Optional[bool]

    class Partial(typing_extensions.TypedDict):
        prompt: typing_extensions.NotRequired[str]
        search_params: typing_extensions.NotRequired[typing.Optional[SearchParams]]
        llm_params: typing_extensions.NotRequired[typing.Optional[LLMRequestParams]]
        enable_search: typing_extensions.NotRequired[typing.Optional[bool]]

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        json_encoders = {dt.datetime: serialize_datetime}
