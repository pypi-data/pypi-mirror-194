# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from server.v1 import inference_pb2 as server_dot_v1_dot_inference__pb2


class InferenceServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.IsReady = channel.unary_unary(
                '/server.v1.InferenceService/IsReady',
                request_serializer=server_dot_v1_dot_inference__pb2.IsReadyInput.SerializeToString,
                response_deserializer=server_dot_v1_dot_inference__pb2.IsReadyOutput.FromString,
                )
        self.Process = channel.unary_unary(
                '/server.v1.InferenceService/Process',
                request_serializer=server_dot_v1_dot_inference__pb2.ProcessInput.SerializeToString,
                response_deserializer=server_dot_v1_dot_inference__pb2.ProcessOutput.FromString,
                )


class InferenceServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def IsReady(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Process(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_InferenceServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'IsReady': grpc.unary_unary_rpc_method_handler(
                    servicer.IsReady,
                    request_deserializer=server_dot_v1_dot_inference__pb2.IsReadyInput.FromString,
                    response_serializer=server_dot_v1_dot_inference__pb2.IsReadyOutput.SerializeToString,
            ),
            'Process': grpc.unary_unary_rpc_method_handler(
                    servicer.Process,
                    request_deserializer=server_dot_v1_dot_inference__pb2.ProcessInput.FromString,
                    response_serializer=server_dot_v1_dot_inference__pb2.ProcessOutput.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'server.v1.InferenceService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class InferenceService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def IsReady(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/server.v1.InferenceService/IsReady',
            server_dot_v1_dot_inference__pb2.IsReadyInput.SerializeToString,
            server_dot_v1_dot_inference__pb2.IsReadyOutput.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Process(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/server.v1.InferenceService/Process',
            server_dot_v1_dot_inference__pb2.ProcessInput.SerializeToString,
            server_dot_v1_dot_inference__pb2.ProcessOutput.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: server/v1/inference.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import builder as _builder
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x19server/v1/inference.proto\x12\tserver.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\x0e\n\x0cIsReadyInput\"J\n\rIsReadyOutput\x12\x14\n\x05ready\x18\x01 \x01(\x08R\x05ready\x12\x19\n\x05\x65rror\x18\x02 \x01(\tH\x00R\x05\x65rror\x88\x01\x01\x42\x08\n\x06_error\"\x1e\n\x0cTaskMetadata\x12\x0e\n\x02id\x18\x01 \x01(\tR\x02id\"Y\n\x0cProcessInput\x12\x14\n\x05input\x18\x01 \x01(\tR\x05input\x12\x33\n\x08metadata\x18\x02 \x01(\x0b\x32\x17.server.v1.TaskMetadataR\x08metadata\"\\\n\rProcessOutput\x12\x1b\n\x06output\x18\x01 \x01(\tH\x00R\x06output\x88\x01\x01\x12\x19\n\x05\x65rror\x18\x02 \x01(\tH\x01R\x05\x65rror\x88\x01\x01\x42\t\n\x07_outputB\x08\n\x06_error2\x92\x01\n\x10InferenceService\x12>\n\x07IsReady\x12\x17.server.v1.IsReadyInput\x1a\x18.server.v1.IsReadyOutput\"\x00\x12>\n\x07Process\x12\x17.server.v1.ProcessInput\x1a\x18.server.v1.ProcessOutput\"\x00\x42\x1fZ\x1dzen/proto/gen/server/v1;zenv1b\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'server.v1.inference_pb2', _globals)
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'Z\035zen/proto/gen/server/v1;zenv1'
  _globals['_ISREADYINPUT']._serialized_start=73
  _globals['_ISREADYINPUT']._serialized_end=87
  _globals['_ISREADYOUTPUT']._serialized_start=89
  _globals['_ISREADYOUTPUT']._serialized_end=163
  _globals['_TASKMETADATA']._serialized_start=165
  _globals['_TASKMETADATA']._serialized_end=195
  _globals['_PROCESSINPUT']._serialized_start=197
  _globals['_PROCESSINPUT']._serialized_end=286
  _globals['_PROCESSOUTPUT']._serialized_start=288
  _globals['_PROCESSOUTPUT']._serialized_end=380
  _globals['_INFERENCESERVICE']._serialized_start=383
  _globals['_INFERENCESERVICE']._serialized_end=529
# @@protoc_insertion_point(module_scope)
