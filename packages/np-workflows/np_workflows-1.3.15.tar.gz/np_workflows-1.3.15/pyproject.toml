[project]
name = "np-workflows"
description = "Ecephys and behavior workflows for the Mindscope Neuropixels team."
authors = [
    {name = "bjhardcastle", email = "ben.hardcastle@alleninstitute.org"},
]
dynamic = ["version"]
dependencies = [
    "np-services>=0.1.33", 
    "np-probe-targets", 
    "np-datajoint", 
    "ipylab>=0.6.0",
    "ipywidgets<8,>=7", 
    "jupyterlab<4.0,>=3.6", 
    "jupyterlab-git<1.0.0,>=0.41.0",
    "jupyter-scheduler<2.0.0,>=1.2.0",
    ]
requires-python = ">=3.11,<4.0"
readme = "README.md"
license = {text = "MIT"}

[project.urls]

[project.group.dev.dependencies]
pip-tools = "*"
isort = "*"
mypy = "*"
black = "*"
pytest = "*"
pytest-cov = "^4.0.0"

[project.group.dev.dependencies.coverage]
extras = ["toml"]
version = "^7.1.0"

[tool.poetry]
name = "np-workflows"
version = "1.3.14"
description = "Ecephys and behavior workflows for the Mindscope Neuropixels team."
authors = ["Ben Hardcastle <ben.hardcastle@alleninstitute.org>"]
readme = "README.md"
packages = [{include = "np_workflows", from = "src"}]

[tool.poetry.dependencies]
python = "^3.11"
np_services = ">= 0.1.32"
np_probe_targets = "*"
np_datajoint = "*"
ipywidgets = "^7"
pydantic = "^1"
jupyterlab = "^3.6"
poetry = "^1.3.2"
jupyterlab-git = "^0.41.0"
jupyter-scheduler = "^1.2.0"

[tool.poetry.group.dev.dependencies]
pip-tools = "*"
isort = "*"
mypy = "*"
black = "*"
pytest = "*"
coverage = {extras = ["toml"], version = "^7.1.0"}
pytest-cov = "^4.0.0"

[build-system]
include = ["src/np_workflows"]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pdm.build]
includes = ["src/np_workflows"]
# requires = ["pdm-pep517>=1.0.0"]
# build-backend = "pdm.pep517.api"

[tool.pdm.dev-dependencies]
dev = [
    "hatch>=1.6.3",
]
[tool.hatch.version]
path = "src/np_workflows/__init__.py"

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
    "--doctest-modules",
    # "--pdb",
    # "--pdbcls=IPython.terminal.debugger:TerminalPdb",
]

doctest_optionflags = [
    "NORMALIZE_WHITESPACE",
    "IGNORE_EXCEPTION_DETAIL",
    "ELLIPSIS",
]

testpaths = [
    "tests",
    "src",
]

[tool.coverage.paths]
source = ["src"]

[tool.coverage.run]
branch = true
source = ["np_workflows"]

[tool.coverage.report]
show_missing = true
