# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['neuralfields']

package_data = \
{'': ['*']}

install_requires = \
['torch>=1.13.1,<2.0.0']

setup_kwargs = {
    'name': 'neuralfields',
    'version': '0.2.2',
    'description': 'A type of potential-based recurrent neural networks implemented with PyTorch',
    'long_description': "# Neural Fields &ndash; Old Idea, New Glory\n\n[![license][license-badge]][license]\n[![docs][docs-stable-badge]][docs-stable]\n[![docs][docs-latest-badge]][docs-latest]\n[![pre-commit][pre-commit-badge]][pre-commit]\n[![bandit][bandit-badge]][bandit-hp]\n[![isort][isort-badge]][isort-hp]\n[![black][black-badge]][black]\n[![ci][ci-badge]][ci]\n[![tests][tests-badge]][tests]\n[![coverage][coverage-badge]][coverage]\n\n## About\n\nIn 1977, Shun-ichi Amari introduced _neural fields_, a class of potential-based recurrent neural networks [1].\nThis architecture was developed as a simplistic model of the activity of neurons in a (human) brain.\nIt's main characteristic is the lateral in-/exhibition of neurons though their accumulated potential.\nDue to its simplicity and expressiveness, Amari’s work was highly influential and led to several follow-up papers such\nas [2-6] to only name a few.\n\n## Support\n\nIf you use code or ideas from this repository for your projects or research, **please cite it**.\n\n```\n@misc{Muratore_neuralfields,\n  author = {Fabio Muratore},\n  title = {neuralfields - A type of potential-based recurrent neural networks implemented with PyTorch},\n  year = {2023},\n  publisher = {GitHub},\n  journal = {GitHub repository},\n  howpublished = {\\url{https://github.com/famura/neuralfields}}\n}\n```\n\n## Features\n\n* There are two variants of the neural fields implemented in this repository: one called `NeuralField` that matches\n  the model of Amari closely using 1D convolutions, as well as another one called `SimpleNeuralField` that replaces the\n  convolutions and introduces custom potential dynamics function.\n* Both implementations have by modern standards very few, i.e., typically less than 1000, parameters. I suggest that you\n  start with the `NeuralField` class since it is more expressive. However, the `SimpleNeuralField` has the benefit of\n  operating with typically less than 20 parameters, which allows you to use optimizers that otherwise might not scale.\n* Both, `NeuralField` and `SimpleNeuralField`, model classes are subclasses of `torch.nn.Module`, hence able to process\n  batched data and run on GPUs.\n* The [examples](https://github.com/famura/neuralfields/blob/main/examples) contain a script for time series learning.\n  However, it is also possible to use neural fields as generative models.\n* This repository is a spin-off from [SimuRLacra](https://github.com/famura/SimuRLacra) where the neural fields have\n  been used as the backbone for control policies. In `SimuRLacra`, the focus is on reinforcement learning for\n  sim-to-real transfer. However, the goal of this repository is to make the implementation **as general as possible**,\n  such that it could for example be used as generative model.\n\n### Time series learning example\n![](examples/time_series_learning.png) ![](exported/examples/time_series_learning.png) \n\n### Time series generation example\n![](examples/time_series_generation.png) ![](exported/examples/time_series_generation.png)\n\n## Getting Started\n\nTo install this package, simply run\n\n```sh\npip install neuralfields\n```\n\nFor further information, please have a look at the [getting started guide][docs-getting-started].\nIn the documentation, you can also find the [complete reference of the source code][docs-code-reference].\n\n---\n### References\n\n[1] S-I. Amari. _Dynamics of pattern formation in lateral-inhibition type neural fields_. Biological Cybernetics.\n1977.<br />\n[2] K. Kishimoto and S-I. Amari. _Existence and stability of local excitations in homogeneous neural fields_. Journal\nof Mathematical Biology, 1979.<br />\n[3] W. Erlhagen and G. Schöner. _Dynamic field theory of movement preparation_. Psychological Review, 2002.<br />\n[4] S-I. Amari, H. Park, and T. Ozeki. _Singularities affect dynamics of learning in neuromanifolds_. Neural\nComputation, 2006.<br />\n[5] T. Luksch, M. Gineger, M. Mühlig, T. Yoshiike, _Adaptive Movement Sequences and Predictive Decisions based on\nHierarchical Dynamical Systems_. International Conference on Intelligent Robots and Systems, 2012.<br />\n[6] C. Kuehn and  J. M. Tölle. _A gradient flow formulation for the stochastic Amari neural field model_. Journal of\nMathematical Biology, 2019.\n\n\n<!-- URLs -->\n[bandit-badge]: https://img.shields.io/badge/security-bandit-green.svg\n[bandit-hp]: https://github.com/PyCQA/bandit\n[black-badge]: https://img.shields.io/badge/code%20style-black-000000.svg\n[black]: https://github.com/psf/black\n[ci-badge]: https://github.com/famura/neuralfields/actions/workflows/ci.yaml/badge.svg\n[ci]: https://github.com/famura/neuralfields/actions/workflows/ci.yaml\n[coverage-badge]: https://famura.github.io/neuralfields/latest/exported/coverage/badge.svg\n[coverage]: https://famura.github.io/neuralfields/latest/exported/coverage/report\n[docs-stable-badge]: https://img.shields.io/badge/docs-stable-informational\n[docs-latest-badge]: https://img.shields.io/badge/docs-latest-informational\n[docs-code-reference]: https://famura.github.io/neuralfields/stable/reference\n[docs-getting-started]: https://famura.github.io/neuralfields/stable/getting_started\n[docs-stable]: https://famura.github.io/neuralfields/stable\n[docs-latest]: https://famura.github.io/neuralfields/latest\n[isort-badge]: https://img.shields.io/badge/imports-isort-green\n[isort-hp]: https://pycqa.github.io/isort/\n[license-badge]: https://img.shields.io/badge/license-MIT--v4-informational\n[license]: https://github.com/famura/neuralfields/LICENSE.txt\n[pre-commit-badge]: https://img.shields.io/badge/pre--commit-enabled-green\n[pre-commit]: https://github.com/pre-commit/pre-commit\n[tests-badge]: https://famura.github.io/neuralfields/latest/exported/tests/badge.svg\n[tests]: https://famura.github.io/neuralfields/latest/exported/tests/report\n",
    'author': 'Fabio Muratore',
    'author_email': 'robot-learning@famura.net',
    'maintainer': 'Fabio Muratore',
    'maintainer_email': 'robot-learning@famura.net',
    'url': 'https://github.com/famura/neuralfields',
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'python_requires': '>=3.8,<4.0',
}


setup(**setup_kwargs)
