[build-system]
requires = ["hatchling>=0.7", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "itkdb"
dynamic = ["version"]
authors = [
    { name = "Giordon Stark", email = "kratsg@gmail.com" },
]
maintainers = [
    { name = "Giordon Stark", email = "kratsg@gmail.com" },
]

description = "Python wrapper to interface with ITk DB."
readme = "README.md"

requires-python = ">=3.7"

classifiers = [
    "License :: OSI Approved :: BSD License",
    "Topic :: Scientific/Engineering",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering",
    "Development Status :: 1 - Planning",
]

dependencies = [
    "requests>=2.0",  # for all HTTP calls to the API
    "urllib3>=1.26.11", # for EOS uploading, need a correct urllib
    "certifi",  # SSL
    "cachecontrol[filecache]",  # for caching HTTP requests according to spec to local file
    "click>=6.0",  # for console scripts,
    "python-jose",  # for id token decoding
    "attrs",  # for model inflation/deflation
    "python-dotenv",  # for loading env variables
    "simple-settings",  # for handling settings more easily
    'importlib_resources; python_version < "3.9"',
    "python-magic",  # for getting the filetype
    "pylibmagic",  # for shipping the magic library for python-magic
    "typing_extensions >=4.0; python_version<'3.11'",
]

[project.optional-dependencies]
eos = [
    "pycurl", # for EOS uploads
]
test = [
  "pytest >=6",
  "pytest-cov >=3",
  "pytest-mock",
  "betamax",  # recording api calls for testing
  "betamax-serializers",
  "requests-mock",
]
dev = [
  "pytest >=6",
  "pytest-cov >=3",
  "pytest-mock",
  "betamax",  # recording api calls for testing
  "betamax-serializers",
  "requests-mock",
  "tbump>=6.7.0",
]
docs = [
  "Sphinx>=4.0",
  "myst_parser>=0.13",
  "sphinx-book-theme>=0.1.0",
  "sphinx_copybutton",
]
contrib = [
  "html2text"
]

[project.urls]
Homepage = "https://gitlab.cern.ch/atlas-itk/sw/db/itkdb"
"Bug Tracker" = "https://gitlab.cern.ch/atlas-itk/sw/db/itkdb/issues"
Source = "https://gitlab.cern.ch/atlas-itk/sw/db/itkdb"

[project.scripts]
itkdb = "itkdb.commandline:itkdb"

[tool.hatch.version]
source = "vcs"

[tool.hatch.version.raw-options]
local_scheme = "no-local-version"

[tool.hatch.build.hooks.vcs]
version-file = "src/itkdb/_version.py"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config", "--cov-report=term-missing", "--cov-config=.coveragerc", "--cov-report=html", "--doctest-modules", "--doctest-glob='*.rst'"]
xfail_strict = true
filterwarnings = ["error"]
log_cli_level = "INFO"
testpaths = [
  "tests",
]

[tool.mypy]
files = "src"
python_version = "3.7"
warn_unused_configs = true
strict = true
show_error_codes = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
warn_unreachable = true

[tool.isort]
profile = "black"

[tool.pylint]
master.py-version = "3.7"
master.ignore-paths= ["src/itkdb/_version.py"]
reports.output-format = "colorized"
similarities.ignore-imports = "yes"
messages_control.disable = [
  "design",
  "fixme",
  "line-too-long",
  "wrong-import-position",
]
